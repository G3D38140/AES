; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28106.4 

	TITLE	i:\projets\aes\aes\aes\calcul_temps.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_R2Calcul_temps@@8				; Calcul_temps::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Calcul_temps@@8			; Calcul_temps::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3Calcul_temps@@8				; Calcul_temps::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AVCalcul_temps@@@8			; Calcul_temps `RTTI Type Descriptor'
PUBLIC	??_R4Calcul_temps@@6B@				; Calcul_temps::`RTTI Complete Object Locator'
PUBLIC	??_7Calcul_temps@@6B@				; Calcul_temps::`vftable'
EXTRN	__ftime64_s:PROC
;	COMDAT ??_7Calcul_temps@@6B@
CONST	SEGMENT
??_7Calcul_temps@@6B@ DD FLAT:??_R4Calcul_temps@@6B@	; Calcul_temps::`vftable'
	DD	FLAT:??_ECalcul_temps@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4Calcul_temps@@6B@
rdata$r	SEGMENT
??_R4Calcul_temps@@6B@ DD 00H				; Calcul_temps::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCalcul_temps@@@8
	DD	FLAT:??_R3Calcul_temps@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCalcul_temps@@@8
data$r	SEGMENT
??_R0?AVCalcul_temps@@@8 DD FLAT:??_7type_info@@6B@	; Calcul_temps `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCalcul_temps@@', 00H
data$r	ENDS
;	COMDAT ??_R3Calcul_temps@@8
rdata$r	SEGMENT
??_R3Calcul_temps@@8 DD 00H				; Calcul_temps::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Calcul_temps@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Calcul_temps@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Calcul_temps@@8 DD FLAT:??_R0?AVCalcul_temps@@@8 ; Calcul_temps::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Calcul_temps@@8
rdata$r	ENDS
;	COMDAT ??_R2Calcul_temps@@8
rdata$r	SEGMENT
??_R2Calcul_temps@@8 DD FLAT:??_R1A@?0A@EA@Calcul_temps@@8 ; Calcul_temps::`RTTI Base Class Array'
PUBLIC	??1Calcul_temps@@UAE@XZ				; Calcul_temps::~Calcul_temps
PUBLIC	?Build@Calcul_temps@@AAE_KXZ			; Calcul_temps::Build
PUBLIC	??_GCalcul_temps@@UAEPAXI@Z			; Calcul_temps::`scalar deleting destructor'
PUBLIC	??0Calcul_temps@@QAE@XZ				; Calcul_temps::Calcul_temps
PUBLIC	?Start_time@Calcul_temps@@QAEXXZ		; Calcul_temps::Start_time
PUBLIC	?Stop_time@Calcul_temps@@QAEXXZ			; Calcul_temps::Stop_time
PUBLIC	?Read_time@Calcul_temps@@QAE_KXZ		; Calcul_temps::Read_time
EXTRN	??_ECalcul_temps@@UAEPAXI@Z:PROC		; Calcul_temps::`vector deleting destructor'
; Function compile flags: /Ogtp
; File I:\Projets\AES\AES\AES\Calcul_temps.cpp
;	COMDAT ?Read_time@Calcul_temps@@QAE_KXZ
_TEXT	SEGMENT
?Read_time@Calcul_temps@@QAE_KXZ PROC			; Calcul_temps::Read_time, COMDAT
; _this$ = ecx

; 30   : 	return (Stop - Start);

	mov	eax, DWORD PTR [ecx+16]
	sub	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR [ecx+20]
	sbb	edx, DWORD PTR [ecx+12]

; 31   : }

	ret	0
?Read_time@Calcul_temps@@QAE_KXZ ENDP			; Calcul_temps::Read_time
_TEXT	ENDS
; Function compile flags: /Ogtp
; File I:\Projets\AES\AES\AES\Calcul_temps.cpp
;	COMDAT ?Stop_time@Calcul_temps@@QAEXXZ
_TEXT	SEGMENT
_timebuffer$1 = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
?Stop_time@Calcul_temps@@QAEXXZ PROC			; Calcul_temps::Stop_time, COMDAT
; _this$ = ecx

; 24   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi

; 37   : 	errno_t erreur = _ftime_s(&timebuffer);

	lea	eax, DWORD PTR _timebuffer$1[ebp]

; 24   : {

	mov	edi, ecx

; 37   : 	errno_t erreur = _ftime_s(&timebuffer);

	push	eax
	call	__ftime64_s

; 38   : 	return (uint64_t)(((timebuffer.time * 1000) + timebuffer.millitm));

	mov	eax, DWORD PTR _timebuffer$1[ebp+4]
	mov	ecx, 1000				; 000003e8H
	mul	ecx
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR _timebuffer$1[ebp]
	mul	ecx
	add	esi, edx
	mov	ecx, eax
	movzx	eax, WORD PTR _timebuffer$1[ebp+8]
	cdq
	add	ecx, eax

; 25   : 	Stop =  Build();

	mov	DWORD PTR [edi+16], ecx

; 26   : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]

; 38   : 	return (uint64_t)(((timebuffer.time * 1000) + timebuffer.millitm));

	adc	esi, edx

; 25   : 	Stop =  Build();

	mov	DWORD PTR [edi+20], esi

; 26   : }

	xor	ecx, ebp
	pop	edi
	pop	esi
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?Stop_time@Calcul_temps@@QAEXXZ ENDP			; Calcul_temps::Stop_time
_TEXT	ENDS
; Function compile flags: /Ogtp
; File I:\Projets\AES\AES\AES\Calcul_temps.cpp
;	COMDAT ?Start_time@Calcul_temps@@QAEXXZ
_TEXT	SEGMENT
_timebuffer$1 = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
?Start_time@Calcul_temps@@QAEXXZ PROC			; Calcul_temps::Start_time, COMDAT
; _this$ = ecx

; 19   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi

; 37   : 	errno_t erreur = _ftime_s(&timebuffer);

	lea	eax, DWORD PTR _timebuffer$1[ebp]

; 19   : {

	mov	edi, ecx

; 37   : 	errno_t erreur = _ftime_s(&timebuffer);

	push	eax
	call	__ftime64_s

; 38   : 	return (uint64_t)(((timebuffer.time * 1000) + timebuffer.millitm));

	mov	eax, DWORD PTR _timebuffer$1[ebp+4]
	mov	ecx, 1000				; 000003e8H
	mul	ecx
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR _timebuffer$1[ebp]
	mul	ecx
	add	esi, edx
	mov	ecx, eax
	movzx	eax, WORD PTR _timebuffer$1[ebp+8]
	cdq
	add	ecx, eax

; 20   : 	Start = Build();

	mov	DWORD PTR [edi+8], ecx

; 21   : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]

; 38   : 	return (uint64_t)(((timebuffer.time * 1000) + timebuffer.millitm));

	adc	esi, edx

; 20   : 	Start = Build();

	mov	DWORD PTR [edi+12], esi

; 21   : }

	xor	ecx, ebp
	pop	edi
	pop	esi
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?Start_time@Calcul_temps@@QAEXXZ ENDP			; Calcul_temps::Start_time
_TEXT	ENDS
; Function compile flags: /Ogtp
; File I:\Projets\AES\AES\AES\Calcul_temps.cpp
;	COMDAT ??0Calcul_temps@@QAE@XZ
_TEXT	SEGMENT
??0Calcul_temps@@QAE@XZ PROC				; Calcul_temps::Calcul_temps, COMDAT
; _this$ = ecx

; 13   : {

	mov	DWORD PTR [ecx], OFFSET ??_7Calcul_temps@@6B@

; 14   : 
; 15   : 	Start = Stop = 0;
; 16   : }

	mov	eax, ecx
	mov	DWORD PTR [ecx+16], 0
	mov	DWORD PTR [ecx+20], 0
	mov	DWORD PTR [ecx+8], 0
	mov	DWORD PTR [ecx+12], 0
	ret	0
??0Calcul_temps@@QAE@XZ ENDP				; Calcul_temps::Calcul_temps
_TEXT	ENDS
; Function compile flags: /Ogtp
; File I:\Projets\AES\AES\AES\Calcul_temps.cpp
;	COMDAT ??_GCalcul_temps@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCalcul_temps@@UAEPAXI@Z PROC			; Calcul_temps::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	test	BYTE PTR ___flags$[ebp], 1

; 43   : {

	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7Calcul_temps@@6B@
	je	SHORT $LN6@scalar
	push	24					; 00000018H
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN6@scalar:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_GCalcul_temps@@UAEPAXI@Z ENDP			; Calcul_temps::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File I:\Projets\AES\AES\AES\Calcul_temps.cpp
;	COMDAT ?Build@Calcul_temps@@AAE_KXZ
_TEXT	SEGMENT
_timebuffer$ = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
?Build@Calcul_temps@@AAE_KXZ PROC			; Calcul_temps::Build, COMDAT
; _this$dead$ = ecx

; 34   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 35   : 
; 36   : 	struct _timeb timebuffer;
; 37   : 	errno_t erreur = _ftime_s(&timebuffer);

	lea	eax, DWORD PTR _timebuffer$[ebp]
	push	esi
	push	eax
	call	__ftime64_s
	add	esp, 4

; 38   : 	return (uint64_t)(((timebuffer.time * 1000) + timebuffer.millitm));

	push	0
	push	1000					; 000003e8H
	push	DWORD PTR _timebuffer$[ebp+4]
	push	DWORD PTR _timebuffer$[ebp]
	call	__allmul
	mov	ecx, eax
	mov	esi, edx
	movzx	eax, WORD PTR _timebuffer$[ebp+8]
	cdq
	add	eax, ecx

; 39   : 
; 40   : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	adc	edx, esi
	xor	ecx, ebp
	pop	esi
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?Build@Calcul_temps@@AAE_KXZ ENDP			; Calcul_temps::Build
_TEXT	ENDS
; Function compile flags: /Ogtp
; File I:\Projets\AES\AES\AES\Calcul_temps.cpp
;	COMDAT ??1Calcul_temps@@UAE@XZ
_TEXT	SEGMENT
??1Calcul_temps@@UAE@XZ PROC				; Calcul_temps::~Calcul_temps, COMDAT
; _this$ = ecx

; 43   : {

	mov	DWORD PTR [ecx], OFFSET ??_7Calcul_temps@@6B@

; 44   : 
; 45   : }

	ret	0
??1Calcul_temps@@UAE@XZ ENDP				; Calcul_temps::~Calcul_temps
_TEXT	ENDS
END
