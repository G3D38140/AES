; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28106.4 

	TITLE	i:\projets\aes\aes\aes\c_password.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

EXTRN	__imp__FreeResource@4:PROC
PUBLIC	??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PBE@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
PUBLIC	??1simple_Huffman@@QAE@XZ			; simple_Huffman::~simple_Huffman
PUBLIC	??_Gsimple_Huffman@@QAEPAXI@Z			; simple_Huffman::`scalar deleting destructor'
PUBLIC	?__autoclassinit2@simple_Huffman@@QAEXI@Z	; simple_Huffman::__autoclassinit2
PUBLIC	??0C_Password@@QAE@XZ				; C_Password::C_Password
PUBLIC	??1C_Password@@QAE@XZ				; C_Password::~C_Password
PUBLIC	?Get_Ressource_huff@C_Password@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@H@Z ; C_Password::Get_Ressource_huff
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?Get_Ressource_huff@C_Password@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@H@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?Get_Ressource_huff@C_Password@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?Get_Ressource_huff@C_Password@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Get_Ressource_huff@C_Password@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Get_Ressource_huff@C_Password@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@H@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?Get_Ressource_huff@C_Password@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@H@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?Get_Ressource_huff@C_Password@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@H@Z$5
	DD	00H
	DD	FLAT:__unwindfunclet$?Get_Ressource_huff@C_Password@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@H@Z$2
	DD	04H
	DD	FLAT:___std_terminate
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_Gsimple_Huffman@@QAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_Gsimple_Huffman@@QAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_Gsimple_Huffman@@QAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1simple_Huffman@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PBE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PBE@Z$0
__ehfuncinfo$??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PBE@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PBE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File I:\Projets\AES\AES\AES\C_Password.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\C_Password.cpp
; File I:\Projets\AES\AES\AES\code_Huffman.cpp
; File I:\Projets\AES\AES\AES\code_huffman.h
; File I:\Projets\AES\AES\AES\code_Huffman.cpp
; File I:\Projets\AES\AES\AES\C_Password.cpp
; File I:\Projets\AES\AES\AES\code_Huffman.cpp
; File I:\Projets\AES\AES\AES\C_Password.cpp
; File I:\Projets\AES\AES\AES\code_Huffman.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File I:\Projets\AES\AES\AES\C_Password.cpp
; File I:\Projets\AES\AES\AES\code_Huffman.cpp
; File I:\Projets\AES\AES\AES\C_Password.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\C_Password.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\C_Password.cpp
;	COMDAT ?Get_Ressource_huff@C_Password@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@H@Z
_TEXT	SEGMENT
$T3 = -44						; size = 4
___$ReturnUdt$GSCopy$ = -40				; size = 4
$T1 = -36						; size = 4
_resText$1$ = -32					; size = 4
$T2 = -32						; size = 4
$T12 = -28						; size = 4
___$ReturnUdt$GSCopy$1$ = -28				; size = 4
_text$1$ = -24						; size = 4
_hRes$1$ = -24						; size = 4
_dwSize$1$ = -20					; size = 4
_temp$13 = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_ID$dead$ = 12						; size = 4
?Get_Ressource_huff@C_Password@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@H@Z PROC ; C_Password::Get_Ressource_huff, COMDAT
; _this$dead$ = ecx

; 42   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Get_Ressource_huff@C_Password@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR ___$ReturnUdt$GSCopy$[ebp], esi
	mov	DWORD PTR $T1[ebp], 0
	mov	DWORD PTR ___$ReturnUdt$GSCopy$1$[ebp], esi
	mov	DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxstr.h

; 52   : 		return( AfxGetStringManager() );

	call	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager
	mov	ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 205  : 		ATLENSURE( pStringMgr != NULL );

	test	ecx, ecx
	je	$LN103@Get_Ressou

; 206  : 		CStringData* pData = pStringMgr->GetNilString();

	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+12]
	call	eax

; 59   : 		return (this+1);

	add	eax, 16					; 00000010H

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	DWORD PTR [esi], eax
; File I:\Projets\AES\AES\AES\C_Password.cpp

; 77   : 	return (Result);

	push	10					; 0000000aH
	push	1030					; 00000406H
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	0
	mov	DWORD PTR $T1[ebp], 1
	call	DWORD PTR __imp__FindResourceW@12
	mov	DWORD PTR _hRes$1$[ebp], eax
	test	eax, eax
	je	$LN92@Get_Ressou

; 43   : 	CString Result;
; 44   : 	DWORD dwSize = 0;
; 45   : 	int lg = 0;
; 46   : 
; 47   : 	HRSRC hRes = FindResource(NULL, MAKEINTRESOURCE(ID), RT_RCDATA); // IDR_MYFILE
; 48   : 
; 49   : 	if (hRes != NULL)
; 50   : 	{
; 51   : 
; 52   : 		// Load the resource and save its total size.
; 53   : 		dwSize = SizeofResource(NULL, hRes);

	push	eax
	push	0
	call	DWORD PTR __imp__SizeofResource@8

; 54   : 		HGLOBAL MemoryHandle = LoadResource(NULL, hRes);

	push	DWORD PTR _hRes$1$[ebp]
	mov	edi, eax
	push	0
	mov	DWORD PTR _dwSize$1$[ebp], edi
	call	DWORD PTR __imp__LoadResource@8

; 55   : 		if (MemoryHandle != NULL)

	test	eax, eax
	je	$LN92@Get_Ressou

; 56   : 		{
; 57   : 			char* resText = (char *)LockResource(MemoryHandle);

	push	eax
	call	DWORD PTR __imp__LockResource@4

; 58   : 			char* text = (char*)malloc(dwSize + 1);

	xor	edx, edx
	mov	DWORD PTR _resText$1$[ebp], eax
	add	edi, 1
	setb	dl
	neg	edx
	or	edx, edi
	push	edx
	call	_malloc
	mov	edi, eax
	add	esp, 4
	mov	DWORD PTR _text$1$[ebp], edi

; 59   : 
; 60   : 			if (text != NULL)

	test	edi, edi
	je	SHORT $LN4@Get_Ressou

; 61   : 			{
; 62   : 				memcpy(text, resText, dwSize);

	push	DWORD PTR _dwSize$1$[ebp]
	push	DWORD PTR _resText$1$[ebp]
	push	edi
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN4@Get_Ressou:

; 63   : 			}
; 64   : 			text[dwSize] = 0;

	mov	eax, DWORD PTR _dwSize$1$[ebp]

; 65   : 			simple_Huffman *pt_huff = new simple_Huffman;

	push	10256					; 00002810H
	mov	BYTE PTR [edi+eax], 0
	call	??2@YAPAXI@Z				; operator new
	mov	edi, eax
	add	esp, 4
	mov	DWORD PTR $T2[ebp], edi
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	test	edi, edi
	je	SHORT $LN6@Get_Ressou
	push	10256					; 00002810H
	push	0
	push	edi
	call	_memset
	add	esp, 12					; 0000000cH
; File I:\Projets\AES\AES\AES\code_Huffman.cpp

; 627  : simple_Huffman::simple_Huffman(){

	lea	eax, DWORD PTR [edi+4100]
	push	OFFSET ??1node@simple_Huffman@@QAE@XZ	; simple_Huffman::node::~node
	push	OFFSET ??0node@simple_Huffman@@QAE@XZ	; simple_Huffman::node::node
	push	256					; 00000100H
	push	24					; 00000018H
	push	eax
	call	??_L@YGXPAXIIP6EX0@Z1@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 628  : 	LastError = 0;
; 629  : 	for (register int i = 0; i < 256; i++) 

	xor	esi, esi
	mov	DWORD PTR [edi+10252], 0
$LL40@Get_Ressou:

; 630  : 		*(trees+i)  = new node();

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	test	eax, eax
	je	SHORT $LN42@Get_Ressou
	xorps	xmm0, xmm0
; File I:\Projets\AES\AES\AES\code_huffman.h

; 16   : 		node(void)  {memset(this, 0, sizeof(node));} // constructor, memset is faster than individ.

	movups	XMMWORD PTR [eax], xmm0
	movq	QWORD PTR [eax+16], xmm0
; File I:\Projets\AES\AES\AES\code_Huffman.cpp

; 630  : 		*(trees+i)  = new node();

	jmp	SHORT $LN43@Get_Ressou
$LN42@Get_Ressou:
	xor	eax, eax
$LN43@Get_Ressou:
	mov	DWORD PTR [edi+esi*4], eax
	inc	esi
	cmp	esi, 256				; 00000100H
	jl	SHORT $LL40@Get_Ressou
; File I:\Projets\AES\AES\AES\C_Password.cpp

; 65   : 			simple_Huffman *pt_huff = new simple_Huffman;

	mov	esi, DWORD PTR ___$ReturnUdt$GSCopy$1$[ebp]
; File I:\Projets\AES\AES\AES\code_Huffman.cpp

; 631  : 	allocatedoutput = NULL;

	mov	DWORD PTR [edi+10248], 0
; File I:\Projets\AES\AES\AES\C_Password.cpp

; 65   : 			simple_Huffman *pt_huff = new simple_Huffman;

	jmp	SHORT $LN7@Get_Ressou
$LN6@Get_Ressou:
	xor	edi, edi
$LN7@Get_Ressou:
	mov	BYTE PTR __$EHRec$[ebp+8], 0

; 66   : 			lg = pt_huff->Decompress((BYTE *)text, dwSize);

	mov	ecx, edi
	push	DWORD PTR _dwSize$1$[ebp]
	push	DWORD PTR _text$1$[ebp]
	call	?Decompress@simple_Huffman@@QAEHPAEH@Z	; simple_Huffman::Decompress
; File I:\Projets\AES\AES\AES\code_Huffman.cpp

; 388  : 	if (allocatedoutput)

	mov	eax, DWORD PTR [edi+10248]
	mov	DWORD PTR $T12[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxstr.h

; 52   : 		return( AfxGetStringManager() );

	call	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager
	mov	ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 205  : 		ATLENSURE( pStringMgr != NULL );

	test	ecx, ecx
	je	$LN104@Get_Ressou

; 206  : 		CStringData* pData = pStringMgr->GetNilString();

	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+12]
	call	eax

; 59   : 		return (this+1);

	add	eax, 16					; 00000010H

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	DWORD PTR _temp$13[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1113 : 		CThisSimpleString( StringTraits::GetDefaultManager() )

	mov	DWORD PTR __$EHRec$[ebp+8], 3

; 1114 : 	{
; 1115 : 		*this = reinterpret_cast< const char* >( pszSrc );

	lea	ecx, DWORD PTR _temp$13[ebp]
	push	DWORD PTR $T12[ebp]
	call	??4?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::operator=
; File I:\Projets\AES\AES\AES\C_Password.cpp

; 68   : 			Result = temp;

	lea	eax, DWORD PTR _temp$13[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	push	eax
	mov	ecx, esi
	call	??4?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::operator=
; File I:\Projets\AES\AES\AES\code_Huffman.cpp

; 608  : 	if (allocatedoutput)

	mov	eax, DWORD PTR [edi+10248]
	test	eax, eax
	je	SHORT $LN75@Get_Ressou

; 609  : 		delete allocatedoutput;

	push	1
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN75@Get_Ressou:

; 610  : 	allocatedoutput = NULL; 

	mov	DWORD PTR [edi+10248], 0
	push	OFFSET ??1node@simple_Huffman@@QAE@XZ	; simple_Huffman::node::~node
	push	256					; 00000100H
	push	24					; 00000018H
	lea	eax, DWORD PTR [edi+4100]
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	push	eax
	call	??_M@YGXPAXIIP6EX0@Z@Z
	push	10256					; 00002810H
	push	edi
	call	??3@YAXPAXI@Z				; operator delete
; File I:\Projets\AES\AES\AES\C_Password.cpp

; 73   : 			free(text);

	push	DWORD PTR _text$1$[ebp]
	call	_free

; 74   : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	add	esp, 12					; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	edi, DWORD PTR _temp$13[ebp]

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	or	eax, -1

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	add	edi, -16				; fffffff0H

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	lock	 xadd	 DWORD PTR [edi+12], eax
	dec	eax
	test	eax, eax
	jg	SHORT $LN92@Get_Ressou

; 89   : 		{
; 90   : 			pStringMgr->Free( this );

	mov	ecx, DWORD PTR [edi]
	push	edi
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+4]
$LN92@Get_Ressou:
; File I:\Projets\AES\AES\AES\C_Password.cpp

; 77   : 	return (Result);

	mov	eax, esi

; 78   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
$LN103@Get_Ressou:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 205  : 		ATLENSURE( pStringMgr != NULL );

	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN104@Get_Ressou:
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN101@Get_Ressou:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Get_Ressource_huff@C_Password@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@H@Z$0:
	mov	eax, DWORD PTR $T1[ebp]
	and	eax, 1
	je	$LN11@Get_Ressou
	and	DWORD PTR $T1[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$GSCopy$[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
$LN11@Get_Ressou:
	ret	0
__unwindfunclet$?Get_Ressource_huff@C_Password@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@H@Z$1:
	push	10256					; 00002810H
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$?Get_Ressource_huff@C_Password@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@H@Z$3:
	push	OFFSET ??1node@simple_Huffman@@QAE@XZ	; simple_Huffman::node::~node
	push	256					; 00000100H
	push	24					; 00000018H
	mov	eax, DWORD PTR $T2[ebp]
	add	eax, 4100				; 00001004H
	push	eax
	call	??_M@YGXPAXIIP6EX0@Z@Z
	ret	0
__unwindfunclet$?Get_Ressource_huff@C_Password@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@H@Z$5:
	lea	ecx, DWORD PTR _temp$13[ebp]
	jmp	??1?$CSimpleStringT@_W$0A@@ATL@@QAE@XZ	; ATL::CSimpleStringT<wchar_t,0>::~CSimpleStringT<wchar_t,0>
__unwindfunclet$?Get_Ressource_huff@C_Password@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@H@Z$2:
	lea	ecx, DWORD PTR _temp$13[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
__ehhandler$?Get_Ressource_huff@C_Password@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Get_Ressource_huff@C_Password@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Get_Ressource_huff@C_Password@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@H@Z ENDP ; C_Password::Get_Ressource_huff
; Function compile flags: /Ogtp
; File I:\Projets\AES\AES\AES\C_Password.cpp
;	COMDAT ??1C_Password@@QAE@XZ
_TEXT	SEGMENT
??1C_Password@@QAE@XZ PROC				; C_Password::~C_Password, COMDAT
; _this$dead$ = ecx

; 14   : }

	ret	0
??1C_Password@@QAE@XZ ENDP				; C_Password::~C_Password
_TEXT	ENDS
; Function compile flags: /Ogtp
; File I:\Projets\AES\AES\AES\C_Password.cpp
;	COMDAT ??0C_Password@@QAE@XZ
_TEXT	SEGMENT
??0C_Password@@QAE@XZ PROC				; C_Password::C_Password, COMDAT
; _this$ = ecx

; 10   : }

	mov	eax, ecx
	ret	0
??0C_Password@@QAE@XZ ENDP				; C_Password::C_Password
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?__autoclassinit2@simple_Huffman@@QAEXI@Z
_TEXT	SEGMENT
_classSize$dead$ = 8					; size = 4
?__autoclassinit2@simple_Huffman@@QAEXI@Z PROC		; simple_Huffman::__autoclassinit2, COMDAT
; _this$ = ecx
	push	10256					; 00002810H
	push	0
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	ret	4
?__autoclassinit2@simple_Huffman@@QAEXI@Z ENDP		; simple_Huffman::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_Gsimple_Huffman@@QAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$dead$ = 8					; size = 4
??_Gsimple_Huffman@@QAEPAXI@Z PROC			; simple_Huffman::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??_Gsimple_Huffman@@QAEPAXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	push	OFFSET ??1node@simple_Huffman@@QAE@XZ	; simple_Huffman::node::~node
	push	256					; 00000100H
	push	24					; 00000018H
	lea	eax, DWORD PTR [esi+4100]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	eax
	call	??_M@YGXPAXIIP6EX0@Z@Z
	push	10256					; 00002810H
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_Gsimple_Huffman@@QAEPAXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??_Gsimple_Huffman@@QAEPAXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??_Gsimple_Huffman@@QAEPAXI@Z ENDP			; simple_Huffman::`scalar deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??1simple_Huffman@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1simple_Huffman@@QAE@XZ PROC				; simple_Huffman::~simple_Huffman, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1simple_Huffman@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	push	OFFSET ??1node@simple_Huffman@@QAE@XZ	; simple_Huffman::node::~node
	push	256					; 00000100H
	push	24					; 00000018H
	lea	eax, DWORD PTR [ecx+4100]
	push	eax
	call	??_M@YGXPAXIIP6EX0@Z@Z
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1simple_Huffman@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1simple_Huffman@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1simple_Huffman@@QAE@XZ ENDP				; simple_Huffman::~simple_Huffman
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
;	COMDAT ??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PBE@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pszSrc$ = 8						; size = 4
??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PBE@Z PROC ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >, COMDAT
; _this$ = ecx

; 1114 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PBE@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxstr.h

; 52   : 		return( AfxGetStringManager() );

	call	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager
	mov	ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 205  : 		ATLENSURE( pStringMgr != NULL );

	test	ecx, ecx
	je	SHORT $LN23@CStringT

; 206  : 		CStringData* pData = pStringMgr->GetNilString();

	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+12]

; 59   : 		return (this+1);

	add	eax, 16					; 00000010H

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	DWORD PTR [esi], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1115 : 		*this = reinterpret_cast< const char* >( pszSrc );

	push	DWORD PTR _pszSrc$[ebp]
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	call	??4?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::operator=

; 1116 : 	}

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
$LN23@CStringT:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 205  : 		ATLENSURE( pStringMgr != NULL );

	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN21@CStringT:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PBE@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CSimpleStringT@_W$0A@@ATL@@QAE@XZ	; ATL::CSimpleStringT<wchar_t,0>::~CSimpleStringT<wchar_t,0>
__ehhandler$??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PBE@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PBE@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PBE@Z ENDP ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
END
