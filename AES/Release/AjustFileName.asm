; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28106.4 

	TITLE	i:\projets\aes\aes\aes\ajustfilename.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_1O@KODPLLAD@?$AA?$CF?$AAs?$AA?$CK?$AA?4?$AA?$CF?$AAs@ ; `string'
PUBLIC	??_C@_19GJNGALLN@?$AA?$CI?$AA1?$AA?$CJ?$AA?4@	; `string'
PUBLIC	??_C@_1BC@NHBIDBIC@?$AA?$CF?$AAs?$AA?$CI?$AA1?$AA?$CJ?$AA?4?$AA?$CF?$AAs@ ; `string'
PUBLIC	??_C@_1BC@LJIHGCAI@?$AA?$CF?$AAs?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?$CF?$AAs@ ; `string'
EXTRN	_wcschr:PROC
EXTRN	_wcsrchr:PROC
EXTRN	__wtoi:PROC
EXTRN	?SetAtGrow@CStringArray@@QAEXHABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z:PROC ; CStringArray::SetAtGrow
EXTRN	?GetFilePath@CFileFind@@UBE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@XZ:PROC ; CFileFind::GetFilePath
EXTRN	?FindNextFileW@CFileFind@@UAEHXZ:PROC		; CFileFind::FindNextFileW
EXTRN	?FindFile@CFileFind@@UAEHPB_WK@Z:PROC		; CFileFind::FindFile
EXTRN	??1CFileFind@@UAE@XZ:PROC			; CFileFind::~CFileFind
EXTRN	??0CFileFind@@QAE@XZ:PROC			; CFileFind::CFileFind
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	_wcstombs_s:PROC
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	__imp__MultiByteToWideChar@24:PROC
EXTRN	_qsort:PROC
EXTRN	?Close@CFile@@UAEXXZ:PROC			; CFile::Close
EXTRN	?Open@CFile@@UAEHPB_WIPAVCFileException@@@Z:PROC ; CFile::Open
EXTRN	??1CFile@@UAE@XZ:PROC				; CFile::~CFile
EXTRN	??0CFile@@QAE@XZ:PROC				; CFile::CFile
EXTRN	?SetSize@CStringArray@@QAEXHH@Z:PROC		; CStringArray::SetSize
EXTRN	??1CStringArray@@UAE@XZ:PROC			; CStringArray::~CStringArray
EXTRN	??0CStringArray@@QAE@XZ:PROC			; CStringArray::CStringArray
;	COMDAT ??_C@_1BC@LJIHGCAI@?$AA?$CF?$AAs?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?$CF?$AAs@
CONST	SEGMENT
??_C@_1BC@LJIHGCAI@?$AA?$CF?$AAs?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?$CF?$AAs@ DB '%'
	DB	00H, 's', 00H, '(', 00H, '%', 00H, 'd', 00H, ')', 00H, '%', 00H
	DB	's', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@NHBIDBIC@?$AA?$CF?$AAs?$AA?$CI?$AA1?$AA?$CJ?$AA?4?$AA?$CF?$AAs@
CONST	SEGMENT
??_C@_1BC@NHBIDBIC@?$AA?$CF?$AAs?$AA?$CI?$AA1?$AA?$CJ?$AA?4?$AA?$CF?$AAs@ DB '%'
	DB	00H, 's', 00H, '(', 00H, '1', 00H, ')', 00H, '.', 00H, '%', 00H
	DB	's', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_19GJNGALLN@?$AA?$CI?$AA1?$AA?$CJ?$AA?4@
CONST	SEGMENT
??_C@_19GJNGALLN@?$AA?$CI?$AA1?$AA?$CJ?$AA?4@ DB '(', 00H, '1', 00H, ')', 00H
	DB	'.', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@KODPLLAD@?$AA?$CF?$AAs?$AA?$CK?$AA?4?$AA?$CF?$AAs@
CONST	SEGMENT
??_C@_1O@KODPLLAD@?$AA?$CF?$AAs?$AA?$CK?$AA?4?$AA?$CF?$AAs@ DB '%', 00H, 's'
	DB	00H, '*', 00H, '.', 00H, '%', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
PUBLIC	?RemoveAll@CStringArray@@QAEXXZ			; CStringArray::RemoveAll
PUBLIC	?Compare@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBEHPB_W@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::Compare
PUBLIC	?StringCompare@?$ChTraitsCRT@_W@ATL@@SAHPB_W0@Z	; ATL::ChTraitsCRT<wchar_t>::StringCompare
PUBLIC	?AtlIsValidString@ATL@@YAHPB_WI@Z		; ATL::AtlIsValidString
PUBLIC	?GetSize@CStringArray@@QBEHXZ			; CStringArray::GetSize
PUBLIC	??ACStringArray@@QAEAAV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@H@Z ; CStringArray::operator[]
PUBLIC	?ElementAt@CStringArray@@QAEAAV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@H@Z ; CStringArray::ElementAt
PUBLIC	??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PBD@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
PUBLIC	??4?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::operator=
PUBLIC	?ConvertToBaseType@?$ChTraitsCRT@_W@ATL@@SAXPA_WHPBDH@Z ; ATL::ChTraitsCRT<wchar_t>::ConvertToBaseType
PUBLIC	?_AtlGetConversionACP@ATL@@YGIXZ		; ATL::_AtlGetConversionACP
PUBLIC	?GetBaseTypeLength@?$ChTraitsCRT@_W@ATL@@SAHPBD@Z ; ATL::ChTraitsCRT<wchar_t>::GetBaseTypeLength
PUBLIC	??4?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::operator=
PUBLIC	??4?$CSimpleStringT@_W$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<wchar_t,0>::operator=
PUBLIC	?Add@CStringArray@@QAEHABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z ; CStringArray::Add
PUBLIC	??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@PB_W@Z ; ATL::operator+
PUBLIC	?Concatenate@?$CSimpleStringT@_W$0A@@ATL@@KAXAAV12@PB_WH1H@Z ; ATL::CSimpleStringT<wchar_t,0>::Concatenate
PUBLIC	?GetManager@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBEPAUIAtlStringMgr@2@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::GetManager
PUBLIC	?GetManager@?$CSimpleStringT@_W$0A@@ATL@@QBEPAUIAtlStringMgr@2@XZ ; ATL::CSimpleStringT<wchar_t,0>::GetManager
PUBLIC	??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
PUBLIC	?GetAt@CStringArray@@QBEABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@H@Z ; CStringArray::GetAt
PUBLIC	?Mid@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBE?AV12@HH@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::Mid
PUBLIC	??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_WHPAUIAtlStringMgr@1@@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
PUBLIC	??0?$CSimpleStringT@_W$0A@@ATL@@QAE@PB_WHPAUIAtlStringMgr@1@@Z ; ATL::CSimpleStringT<wchar_t,0>::CSimpleStringT<wchar_t,0>
PUBLIC	??$AtlAddThrow@H@ATL@@YAHHH@Z			; ATL::AtlAddThrow<int>
PUBLIC	??$AtlAdd@H@ATL@@YAJPAHHH@Z			; ATL::AtlAdd<int>
PUBLIC	_HRESULT_FROM_WIN32
PUBLIC	?StringFindCharRev@?$ChTraitsCRT@_W@ATL@@SAPB_WPB_W_W@Z ; ATL::ChTraitsCRT<wchar_t>::StringFindCharRev
PUBLIC	?StringFindChar@?$ChTraitsCRT@_W@ATL@@SAPB_WPB_W_W@Z ; ATL::ChTraitsCRT<wchar_t>::StringFindChar
PUBLIC	?GetBuffer@?$CSimpleStringT@_W$0A@@ATL@@QAEPA_WXZ ; ATL::CSimpleStringT<wchar_t,0>::GetBuffer
PUBLIC	?Find@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBEH_WH@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::Find
PUBLIC	?ReverseFind@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBEH_W@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::ReverseFind
PUBLIC	?Right@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBE?AV12@H@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::Right
PUBLIC	?Left@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBE?AV12@H@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::Left
PUBLIC	??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@0@Z ; ATL::operator+
PUBLIC	??9ATL@@YA_NABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@0@Z ; ATL::operator!=
PUBLIC	?BuildName@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z ; AjustFileName::BuildName
PUBLIC	?__autoclassinit2@CFileFind@@QAEXI@Z		; CFileFind::__autoclassinit2
PUBLIC	?Do@AjustFileName@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z ; AjustFileName::Do
PUBLIC	?SortStringArray@AjustFileName@@AAEXAAVCStringArray@@H@Z ; AjustFileName::SortStringArray
PUBLIC	?CompareDescending@@YAHPBX0@Z			; CompareDescending
PUBLIC	?CompareAscending@@YAHPBX0@Z			; CompareAscending
PUBLIC	?__autoclassinit2@CFile@@QAEXI@Z		; CFile::__autoclassinit2
PUBLIC	?FileExist@AjustFileName@@AAEHV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z ; AjustFileName::FileExist
PUBLIC	?Get_Extension@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z ; AjustFileName::Get_Extension
PUBLIC	?Supprime_Extension@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z ; AjustFileName::Supprime_Extension
PUBLIC	??1AjustFileName@@QAE@XZ			; AjustFileName::~AjustFileName
PUBLIC	??0AjustFileName@@QAE@XZ			; AjustFileName::AjustFileName
PUBLIC	?__autoclassinit2@CStringArray@@QAEXI@Z		; CStringArray::__autoclassinit2
PUBLIC	?List@@3VCStringArray@@A			; List
?List@@3VCStringArray@@A DB 014H DUP (?)		; List
_BSS	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Supprime_Extension@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Supprime_Extension@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z$0
__ehfuncinfo$?Supprime_Extension@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Supprime_Extension@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Get_Extension@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Get_Extension@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z$0
__ehfuncinfo$?Get_Extension@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Get_Extension@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?FileExist@AjustFileName@@AAEHV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FileExist@AjustFileName@@AAEHV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?FileExist@AjustFileName@@AAEHV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z$1
__ehfuncinfo$?FileExist@AjustFileName@@AAEHV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?FileExist@AjustFileName@@AAEHV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?Do@AjustFileName@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$?Do@AjustFileName@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?Do@AjustFileName@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Do@AjustFileName@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Do@AjustFileName@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?Do@AjustFileName@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?Do@AjustFileName@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z$4
	DD	03H
	DD	FLAT:__unwindfunclet$?Do@AjustFileName@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z$6
	DD	04H
	DD	FLAT:__unwindfunclet$?Do@AjustFileName@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z$20
	DD	05H
	DD	FLAT:__unwindfunclet$?Do@AjustFileName@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z$21
	DD	04H
	DD	FLAT:__unwindfunclet$?Do@AjustFileName@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z$8
	DD	04H
	DD	FLAT:__unwindfunclet$?Do@AjustFileName@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z$9
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?BuildName@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?BuildName@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?BuildName@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?BuildName@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildName@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?BuildName@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?BuildName@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?BuildName@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z$4
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@0@Z$0
__ehfuncinfo$??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@PB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@PB_W@Z$0
__ehfuncinfo$??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@PB_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@PB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PBD@Z$0
__ehfuncinfo$??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
?List$initializer$@@3P6AXXZA DD FLAT:??__EList@@YAXXZ	; List$initializer$
; Function compile flags: /Ogtp
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
;	COMDAT ??__EList@@YAXXZ
text$di	SEGMENT
??__EList@@YAXXZ PROC					; `dynamic initializer for 'List'', COMDAT

; 13   : CStringArray  List;

	mov	ecx, OFFSET ?List@@3VCStringArray@@A	; List
	call	??0CStringArray@@QAE@XZ			; CStringArray::CStringArray
	push	OFFSET ??__FList@@YAXXZ			; `dynamic atexit destructor for 'List''
	call	_atexit
	pop	ecx
	ret	0
??__EList@@YAXXZ ENDP					; `dynamic initializer for 'List''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__FList@@YAXXZ
text$yd	SEGMENT
??__FList@@YAXXZ PROC					; `dynamic atexit destructor for 'List'', COMDAT
	mov	ecx, OFFSET ?List@@3VCStringArray@@A	; List
	jmp	??1CStringArray@@UAE@XZ			; CStringArray::~CStringArray
??__FList@@YAXXZ ENDP					; `dynamic atexit destructor for 'List''
text$yd	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?__autoclassinit2@CStringArray@@QAEXI@Z
_TEXT	SEGMENT
_classSize$dead$ = 8					; size = 4
?__autoclassinit2@CStringArray@@QAEXI@Z PROC		; CStringArray::__autoclassinit2, COMDAT
; _this$dead$ = ecx
	xorps	xmm0, xmm0
	mov	DWORD PTR ?List@@3VCStringArray@@A+16, 0
	movups	XMMWORD PTR ?List@@3VCStringArray@@A, xmm0
	ret	4
?__autoclassinit2@CStringArray@@QAEXI@Z ENDP		; CStringArray::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxcoll.inl
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxcoll.inl
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
;	COMDAT ??0AjustFileName@@QAE@XZ
_TEXT	SEGMENT
??0AjustFileName@@QAE@XZ PROC				; AjustFileName::AjustFileName, COMDAT
; _this$ = ecx

; 16   : {

	push	esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxcoll.inl

; 286  : 	{ SetSize(0); }

	push	-1
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 16   : {

	mov	esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxcoll.inl

; 286  : 	{ SetSize(0); }

	mov	ecx, OFFSET ?List@@3VCStringArray@@A	; List
	push	0
	call	?SetSize@CStringArray@@QAEXHH@Z		; CStringArray::SetSize
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 18   : }

	mov	eax, esi
	pop	esi
	ret	0
??0AjustFileName@@QAE@XZ ENDP				; AjustFileName::AjustFileName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
;	COMDAT ??1AjustFileName@@QAE@XZ
_TEXT	SEGMENT
??1AjustFileName@@QAE@XZ PROC				; AjustFileName::~AjustFileName, COMDAT
; _this$dead$ = ecx

; 23   : }

	ret	0
??1AjustFileName@@QAE@XZ ENDP				; AjustFileName::~AjustFileName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
;	COMDAT ?Supprime_Extension@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z
_TEXT	SEGMENT
___$ReturnUdt$GSCopy$ = -16				; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_chaine$ = 12						; size = 4
?Supprime_Extension@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z PROC ; AjustFileName::Supprime_Extension, COMDAT
; _this$dead$ = ecx

; 26   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Supprime_Extension@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR ___$ReturnUdt$GSCopy$[ebp], esi
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

	mov	eax, DWORD PTR _chaine$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1758 : 		if( iStart < 0 || iStart >= nLength)

	cmp	DWORD PTR [eax-12], 0
	jg	SHORT $LN7@Supprime_E

; 1759 : 		{
; 1760 : 			return( -1 );

	or	eax, -1
	jmp	SHORT $LN11@Supprime_E
$LN7@Supprime_E:

; 606  : 		return wcschr( pszBlock, chMatch );

	push	46					; 0000002eH
	push	eax
	call	_wcschr
	add	esp, 8

; 1767 : 		return( (psz == NULL) ? -1 : int( psz - this->GetString() ) );

	test	eax, eax
	jne	SHORT $LN10@Supprime_E
	or	eax, -1
	jmp	SHORT $LN11@Supprime_E
$LN10@Supprime_E:
	sub	eax, DWORD PTR _chaine$[ebp]
	sar	eax, 1
$LN11@Supprime_E:
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 29   : 	CString local = chaine.Left(index);

	push	eax
	push	esi
	lea	ecx, DWORD PTR _chaine$[ebp]
	mov	DWORD PTR [esi], 0
	call	?Left@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBE?AV12@H@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::Left

; 30   : 	return (local);

	mov	DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	or	ecx, -1

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	eax, DWORD PTR _chaine$[ebp]
	add	eax, -16				; fffffff0H

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	lock	 xadd	 DWORD PTR [eax+12], ecx
	dec	ecx
	test	ecx, ecx
	jg	SHORT $LN33@Supprime_E

; 89   : 		{
; 90   : 			pStringMgr->Free( this );

	mov	ecx, DWORD PTR [eax]
	push	eax
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+4]
$LN33@Supprime_E:
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 31   : }

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Supprime_Extension@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z$0:
	lea	ecx, DWORD PTR _chaine$[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
__ehhandler$?Supprime_Extension@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Supprime_Extension@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Supprime_Extension@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z ENDP ; AjustFileName::Supprime_Extension
; Function compile flags: /Ogtp
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
;	COMDAT ?Get_Extension@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z
_TEXT	SEGMENT
___$ReturnUdt$GSCopy$ = -16				; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_chaine$ = 12						; size = 4
?Get_Extension@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z PROC ; AjustFileName::Get_Extension, COMDAT
; _this$dead$ = ecx

; 34   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Get_Extension@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR ___$ReturnUdt$GSCopy$[ebp], esi
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 613  : 		return wcsrchr( psz, ch );

	push	46					; 0000002eH
	push	DWORD PTR _chaine$[ebp]
	call	_wcsrchr

; 1811 : 		PCXSTR psz = StringTraits::StringFindCharRev( this->GetString(), ch );

	mov	ecx, eax

; 613  : 		return wcsrchr( psz, ch );

	add	esp, 8

; 1814 : 		return( (psz == NULL) ? -1 : int( psz - this->GetString() ) );

	mov	eax, DWORD PTR _chaine$[ebp]
	test	ecx, ecx
	jne	SHORT $LN8@Get_Extens
	or	ecx, -1
	jmp	SHORT $LN9@Get_Extens
$LN8@Get_Extens:
	sub	ecx, eax
	sar	ecx, 1
$LN9@Get_Extens:
	mov	DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

	mov	eax, DWORD PTR [eax-12]
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 36   : 	CString local = chaine.Right(chaine.GetLength()- (index +1));

	sub	eax, ecx
	lea	ecx, DWORD PTR _chaine$[ebp]
	dec	eax
	push	eax
	push	esi
	call	?Right@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBE?AV12@H@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::Right

; 37   : 	return (local);

	mov	DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	or	ecx, -1

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	eax, DWORD PTR _chaine$[ebp]
	add	eax, -16				; fffffff0H

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	lock	 xadd	 DWORD PTR [eax+12], ecx
	dec	ecx
	test	ecx, ecx
	jg	SHORT $LN31@Get_Extens

; 89   : 		{
; 90   : 			pStringMgr->Free( this );

	mov	ecx, DWORD PTR [eax]
	push	eax
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+4]
$LN31@Get_Extens:
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 38   : }

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Get_Extension@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z$0:
	lea	ecx, DWORD PTR _chaine$[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
__ehhandler$?Get_Extension@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Get_Extension@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Get_Extension@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z ENDP ; AjustFileName::Get_Extension
; Function compile flags: /Ogtp
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
;	COMDAT ?FileExist@AjustFileName@@AAEHV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
_file_object$ = -36					; size = 20
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_File$ = 8						; size = 4
?FileExist@AjustFileName@@AAEHV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z PROC ; AjustFileName::FileExist, COMDAT
; _this$dead$ = ecx

; 41   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FileExist@AjustFileName@@AAEHV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 42   : 
; 43   : 	CFile file_object;

	lea	ecx, DWORD PTR _file_object$[ebp]
	xorps	xmm0, xmm0
	mov	DWORD PTR _file_object$[ebp+16], 0
	movups	XMMWORD PTR _file_object$[ebp], xmm0
	call	??0CFile@@QAE@XZ			; CFile::CFile
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	eax, DWORD PTR _File$[ebp]

; 73   : 		return( nRefs > 1 );

	cmp	DWORD PTR [eax-4], 1

; 499  : 		if( pData->IsShared() )

	jle	SHORT $LN10@FileExist

; 500  : 		{
; 501  : 			Fork( pData->nDataLength );

	push	DWORD PTR [eax-12]
	lea	ecx, DWORD PTR _File$[ebp]
	call	?Fork@?$CSimpleStringT@_W$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<wchar_t,0>::Fork
	mov	eax, DWORD PTR _File$[ebp]
$LN10@FileExist:
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 44   : 	BOOL  status = file_object.Open(File.GetBuffer(), CFile::modeRead);

	push	0
	push	0
	push	eax
	lea	ecx, DWORD PTR _file_object$[ebp]
	call	?Open@CFile@@UAEHPB_WIPAVCFileException@@@Z ; CFile::Open

; 45   : 	
; 46   : 	if (status == FALSE) return (FALSE);

	test	eax, eax
	jne	SHORT $LN2@FileExist
	xor	esi, esi
	jmp	SHORT $LN6@FileExist
$LN2@FileExist:

; 47   : 	
; 48   : 	file_object.Close();

	lea	ecx, DWORD PTR _file_object$[ebp]
	call	?Close@CFile@@UAEXXZ			; CFile::Close

; 49   : 	return (TRUE);

	mov	esi, 1
$LN6@FileExist:
	lea	ecx, DWORD PTR _file_object$[ebp]
	call	??1CFile@@UAE@XZ			; CFile::~CFile
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	or	ecx, -1

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	eax, DWORD PTR _File$[ebp]
	add	eax, -16				; fffffff0H

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	lock	 xadd	 DWORD PTR [eax+12], ecx
	dec	ecx
	test	ecx, ecx
	jg	SHORT $LN34@FileExist

; 89   : 		{
; 90   : 			pStringMgr->Free( this );

	mov	ecx, DWORD PTR [eax]
	push	eax
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+4]
$LN34@FileExist:
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 50   : }

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?FileExist@AjustFileName@@AAEHV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z$0:
	lea	ecx, DWORD PTR _File$[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
__unwindfunclet$?FileExist@AjustFileName@@AAEHV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z$1:
	lea	ecx, DWORD PTR _file_object$[ebp]
	jmp	??1CFile@@UAE@XZ			; CFile::~CFile
__ehhandler$?FileExist@AjustFileName@@AAEHV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FileExist@AjustFileName@@AAEHV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?FileExist@AjustFileName@@AAEHV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z ENDP ; AjustFileName::FileExist
; Function compile flags: /Ogtp
;	COMDAT ?__autoclassinit2@CFile@@QAEXI@Z
_TEXT	SEGMENT
_classSize$dead$ = 8					; size = 4
?__autoclassinit2@CFile@@QAEXI@Z PROC			; CFile::__autoclassinit2, COMDAT
; _this$ = ecx
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [ecx], xmm0
	mov	DWORD PTR [ecx+16], 0
	ret	4
?__autoclassinit2@CFile@@QAEXI@Z ENDP			; CFile::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlcore.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
;	COMDAT ?CompareAscending@@YAHPBX0@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?CompareAscending@@YAHPBX0@Z PROC			; CompareAscending, COMDAT

; 53   : {

	push	ebp
	mov	ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 377  : 		return( m_pszData );

	mov	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlcore.h

; 81   : 	return (psz != NULL);

	test	ecx, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1444 : 		ATLENSURE( AtlIsValidString( psz ) );

	je	SHORT $LN27@CompareAsc

; 564  : 		return wcscmp( pszA, pszB );

	mov	eax, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR [eax]
$LL21@CompareAsc:
	mov	dx, WORD PTR [eax]
	cmp	dx, WORD PTR [ecx]
	jne	SHORT $LN22@CompareAsc
	test	dx, dx
	je	SHORT $LN23@CompareAsc
	mov	dx, WORD PTR [eax+2]
	cmp	dx, WORD PTR [ecx+2]
	jne	SHORT $LN22@CompareAsc
	add	eax, 4
	add	ecx, 4
	test	dx, dx
	jne	SHORT $LL21@CompareAsc
$LN23@CompareAsc:
	xor	eax, eax
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 57   : }

	pop	ebp
	ret	0
$LN22@CompareAsc:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 564  : 		return wcscmp( pszA, pszB );

	sbb	eax, eax
	or	eax, 1
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 57   : }

	pop	ebp
	ret	0
$LN27@CompareAsc:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1444 : 		ATLENSURE( AtlIsValidString( psz ) );

	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN25@CompareAsc:
	int	3
?CompareAscending@@YAHPBX0@Z ENDP			; CompareAscending
_TEXT	ENDS
; Function compile flags: /Ogtp
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlcore.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
;	COMDAT ?CompareDescending@@YAHPBX0@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?CompareDescending@@YAHPBX0@Z PROC			; CompareDescending, COMDAT

; 60   : {

	push	ebp
	mov	ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 377  : 		return( m_pszData );

	mov	eax, DWORD PTR _b$[ebp]
	mov	ecx, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlcore.h

; 81   : 	return (psz != NULL);

	test	ecx, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1444 : 		ATLENSURE( AtlIsValidString( psz ) );

	je	SHORT $LN27@CompareDes

; 564  : 		return wcscmp( pszA, pszB );

	mov	eax, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR [eax]
$LL21@CompareDes:
	mov	dx, WORD PTR [eax]
	cmp	dx, WORD PTR [ecx]
	jne	SHORT $LN22@CompareDes
	test	dx, dx
	je	SHORT $LN23@CompareDes
	mov	dx, WORD PTR [eax+2]
	cmp	dx, WORD PTR [ecx+2]
	jne	SHORT $LN22@CompareDes
	add	eax, 4
	add	ecx, 4
	test	dx, dx
	jne	SHORT $LL21@CompareDes
$LN23@CompareDes:
	xor	eax, eax
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 63   : 	return (-1 * (pA->Compare(*pB)));

	neg	eax

; 64   : }

	pop	ebp
	ret	0
$LN22@CompareDes:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 564  : 		return wcscmp( pszA, pszB );

	sbb	eax, eax
	or	eax, 1
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 63   : 	return (-1 * (pA->Compare(*pB)));

	neg	eax

; 64   : }

	pop	ebp
	ret	0
$LN27@CompareDes:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1444 : 		ATLENSURE( AtlIsValidString( psz ) );

	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN25@CompareDes:
	int	3
?CompareDescending@@YAHPBX0@Z ENDP			; CompareDescending
_TEXT	ENDS
; Function compile flags: /Ogtp
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxcoll.inl
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
;	COMDAT ?SortStringArray@AjustFileName@@AAEXAAVCStringArray@@H@Z
_TEXT	SEGMENT
_csa$dead$ = 8						; size = 4
_bDescending$dead$ = 12					; size = 4
?SortStringArray@AjustFileName@@AAEXAAVCStringArray@@H@Z PROC ; AjustFileName::SortStringArray, COMDAT
; _this$dead$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxcoll.inl

; 278  : 	{ return m_nSize; }

	mov	eax, DWORD PTR ?List@@3VCStringArray@@A+8
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 69   : 	if (iArraySize <= 0)

	test	eax, eax
	jle	SHORT $LN4@SortString

; 70   : 		return;
; 71   : 
; 72   : 	int iCSSize = sizeof(CString*);
; 73   : 	void* pArrayStart = (void *)&csa[0];
; 74   : 
; 75   : 	if (bDescending)
; 76   : 		qsort(pArrayStart, iArraySize, iCSSize, CompareDescending);
; 77   : 	else
; 78   : 		qsort(pArrayStart, iArraySize, iCSSize, CompareAscending);

	push	OFFSET ?CompareAscending@@YAHPBX0@Z	; CompareAscending
	push	4
	push	eax
	push	DWORD PTR ?List@@3VCStringArray@@A+4
	call	_qsort
	add	esp, 16					; 00000010H
$LN4@SortString:

; 79   : }

	ret	8
?SortStringArray@AjustFileName@@AAEXAAVCStringArray@@H@Z ENDP ; AjustFileName::SortStringArray
_TEXT	ENDS
; Function compile flags: /Ogtp
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxcoll.inl
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxcoll.inl
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxcoll.inl
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxcoll.inl
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxcoll.inl
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
;	COMDAT ?Do@AjustFileName@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z
_TEXT	SEGMENT
tv1955 = -96						; size = 4
$T11 = -96						; size = 4
___$ReturnUdt$GSCopy$1$ = -92				; size = 4
tv1922 = -88						; size = 4
_index$1$ = -88						; size = 4
___$ReturnUdt$GSCopy$ = -88				; size = 4
$T10 = -88						; size = 4
_pNewData$1$ = -84					; size = 4
_pNewData$1$ = -84					; size = 4
tv1916 = -84						; size = 4
_pNewData$1$ = -84					; size = 4
_pNewData$1$ = -84					; size = 4
_pNewData$1$ = -84					; size = 4
_bWorking$2$ = -84					; size = 4
_this$ = -84						; size = 4
_file_object$21 = -80					; size = 20
_finder$ = -60						; size = 28
_NewFile$ = -32						; size = 4
_radical$ = -28						; size = 4
_Ext$ = -24						; size = 4
_pSrcData$1$ = -20					; size = 4
_pNewData$1$ = -20					; size = 4
$T22 = -20						; size = 4
$T4 = -20						; size = 4
_this$ = -20						; size = 4
_this$ = -20						; size = 4
_local$23 = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_File$ = 12						; size = 4
?Do@AjustFileName@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z PROC ; AjustFileName::Do, COMDAT
; _this$dead$ = ecx

; 101  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Do@AjustFileName@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 84					; 00000054H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR ___$ReturnUdt$GSCopy$1$[ebp], eax
	mov	DWORD PTR ___$ReturnUdt$GSCopy$[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 102  : 	BOOL bWorking = FALSE;
; 103  : 	CFileFind finder;

	lea	ecx, DWORD PTR _finder$[ebp]
	xorps	xmm0, xmm0
	mov	DWORD PTR _finder$[ebp+24], 0
	movups	XMMWORD PTR _finder$[ebp], xmm0
	movq	QWORD PTR _finder$[ebp+16], xmm0
	call	??0CFileFind@@QAE@XZ			; CFileFind::CFileFind
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxstr.h

; 52   : 		return( AfxGetStringManager() );

	call	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager
	mov	ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 205  : 		ATLENSURE( pStringMgr != NULL );

	test	ecx, ecx
	je	$LN498@Do

; 206  : 		CStringData* pData = pStringMgr->GetNilString();

	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+12]
	call	eax

; 59   : 		return (this+1);

	lea	edi, DWORD PTR [eax+16]

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	DWORD PTR _NewFile$[ebp], edi
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 104  : 	CString NewFile;

	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 105  : 	CString radical = Supprime_Extension(File);

	push	ecx
	mov	DWORD PTR _this$[ebp], esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	esi, DWORD PTR _File$[ebp]
	add	esi, -16				; fffffff0H
	mov	DWORD PTR _radical$[ebp], 0

; 882  : 		IAtlStringMgr* pNewStringMgr = pData->pStringMgr->Clone();

	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+16]
	call	eax

; 69   : 		return nRefs < 0;

	cmp	DWORD PTR [esi+12], 0

; 882  : 		IAtlStringMgr* pNewStringMgr = pData->pStringMgr->Clone();

	mov	ecx, eax

; 69   : 		return nRefs < 0;

	lea	eax, DWORD PTR [esi+12]

; 883  : 		if( !pData->IsLocked() && (pNewStringMgr == pData->pStringMgr) )

	jl	SHORT $LN56@Do
	cmp	ecx, DWORD PTR [esi]
	jne	SHORT $LN56@Do

; 65   : 		_InterlockedIncrement(&nRefs);

	lock	 inc	 DWORD PTR [eax]

; 887  : 		}

	jmp	SHORT $LN57@Do
$LN56@Do:

; 890  : 			pNewData = pNewStringMgr->Allocate( pData->nDataLength, sizeof( XCHAR ) );

	mov	eax, DWORD PTR [ecx]
	push	2
	push	DWORD PTR [esi+4]
	mov	eax, DWORD PTR [eax]
	call	eax
	mov	DWORD PTR _pNewData$1$[ebp], eax

; 891  : 			if( pNewData == NULL )

	test	eax, eax
	je	$LN487@Do

; 894  : 			}
; 895  : 			pNewData->nDataLength = pData->nDataLength;

	mov	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+4], ecx

; 59   : 		return (this+1);

	lea	ecx, DWORD PTR [esi+16]

; 896  : 			CopyChars( PXSTR( pNewData->data() ), pData->nDataLength+1,

	mov	edx, DWORD PTR [esi+4]

; 59   : 		return (this+1);

	add	eax, 16					; 00000010H

; 896  : 			CopyChars( PXSTR( pNewData->data() ), pData->nDataLength+1,

	inc	edx
	push	edx
	push	ecx
	push	edx
	push	eax
	call	?CopyChars@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::CopyChars
	mov	esi, DWORD PTR _pNewData$1$[ebp]
	add	esp, 16					; 00000010H
$LN57@Do:

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	ecx, DWORD PTR _this$[ebp]

; 59   : 		return (this+1);

	lea	eax, DWORD PTR [esi+16]

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	DWORD PTR [ecx], eax
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 105  : 	CString radical = Supprime_Extension(File);

	lea	eax, DWORD PTR _radical$[ebp]
	push	eax
	call	?Supprime_Extension@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z ; AjustFileName::Supprime_Extension
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 106  : 	CString Ext = Get_Extension(File);

	push	ecx
	mov	DWORD PTR _this$[ebp], esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	esi, DWORD PTR _File$[ebp]
	add	esi, -16				; fffffff0H
	mov	DWORD PTR _Ext$[ebp], 0

; 882  : 		IAtlStringMgr* pNewStringMgr = pData->pStringMgr->Clone();

	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+16]
	call	eax

; 69   : 		return nRefs < 0;

	cmp	DWORD PTR [esi+12], 0

; 882  : 		IAtlStringMgr* pNewStringMgr = pData->pStringMgr->Clone();

	mov	ecx, eax

; 69   : 		return nRefs < 0;

	lea	eax, DWORD PTR [esi+12]

; 883  : 		if( !pData->IsLocked() && (pNewStringMgr == pData->pStringMgr) )

	jl	SHORT $LN116@Do
	cmp	ecx, DWORD PTR [esi]
	jne	SHORT $LN116@Do

; 65   : 		_InterlockedIncrement(&nRefs);

	lock	 inc	 DWORD PTR [eax]

; 887  : 		}

	jmp	SHORT $LN117@Do
$LN116@Do:

; 890  : 			pNewData = pNewStringMgr->Allocate( pData->nDataLength, sizeof( XCHAR ) );

	mov	eax, DWORD PTR [ecx]
	push	2
	push	DWORD PTR [esi+4]
	mov	eax, DWORD PTR [eax]
	call	eax
	mov	DWORD PTR _pNewData$1$[ebp], eax

; 891  : 			if( pNewData == NULL )

	test	eax, eax
	je	$LN487@Do

; 894  : 			}
; 895  : 			pNewData->nDataLength = pData->nDataLength;

	mov	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+4], ecx

; 59   : 		return (this+1);

	lea	ecx, DWORD PTR [esi+16]

; 896  : 			CopyChars( PXSTR( pNewData->data() ), pData->nDataLength+1,

	mov	edx, DWORD PTR [esi+4]

; 59   : 		return (this+1);

	add	eax, 16					; 00000010H

; 896  : 			CopyChars( PXSTR( pNewData->data() ), pData->nDataLength+1,

	inc	edx
	push	edx
	push	ecx
	push	edx
	push	eax
	call	?CopyChars@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::CopyChars
	mov	esi, DWORD PTR _pNewData$1$[ebp]
	add	esp, 16					; 00000010H
$LN117@Do:

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	ecx, DWORD PTR _this$[ebp]

; 59   : 		return (this+1);

	lea	eax, DWORD PTR [esi+16]

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	DWORD PTR [ecx], eax
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 106  : 	CString Ext = Get_Extension(File);

	lea	eax, DWORD PTR _Ext$[ebp]
	push	eax
	call	?Get_Extension@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z ; AjustFileName::Get_Extension
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	esi, DWORD PTR _File$[ebp]
	add	esi, -16				; fffffff0H

; 882  : 		IAtlStringMgr* pNewStringMgr = pData->pStringMgr->Clone();

	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+16]
	call	eax

; 69   : 		return nRefs < 0;

	cmp	DWORD PTR [esi+12], 0

; 882  : 		IAtlStringMgr* pNewStringMgr = pData->pStringMgr->Clone();

	mov	ecx, eax

; 69   : 		return nRefs < 0;

	lea	eax, DWORD PTR [esi+12]

; 883  : 		if( !pData->IsLocked() && (pNewStringMgr == pData->pStringMgr) )

	jl	SHORT $LN172@Do
	cmp	ecx, DWORD PTR [esi]
	jne	SHORT $LN172@Do

; 65   : 		_InterlockedIncrement(&nRefs);

	lock	 inc	 DWORD PTR [eax]

; 887  : 		}

	jmp	SHORT $LN173@Do
$LN172@Do:

; 890  : 			pNewData = pNewStringMgr->Allocate( pData->nDataLength, sizeof( XCHAR ) );

	mov	eax, DWORD PTR [ecx]
	push	2
	push	DWORD PTR [esi+4]
	mov	eax, DWORD PTR [eax]
	call	eax
	mov	DWORD PTR _pNewData$1$[ebp], eax

; 891  : 			if( pNewData == NULL )

	test	eax, eax
	je	$LN487@Do

; 894  : 			}
; 895  : 			pNewData->nDataLength = pData->nDataLength;

	mov	ecx, DWORD PTR [esi+4]

; 59   : 		return (this+1);

	lea	edx, DWORD PTR [eax+16]

; 895  : 			pNewData->nDataLength = pData->nDataLength;

	mov	DWORD PTR [eax+4], ecx

; 59   : 		return (this+1);

	lea	eax, DWORD PTR [esi+16]

; 896  : 			CopyChars( PXSTR( pNewData->data() ), pData->nDataLength+1,

	mov	ecx, DWORD PTR [esi+4]
	inc	ecx
	push	ecx
	push	eax
	push	ecx
	push	edx
	call	?CopyChars@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::CopyChars
	mov	esi, DWORD PTR _pNewData$1$[ebp]
	add	esp, 16					; 00000010H
$LN173@Do:

; 59   : 		return (this+1);

	add	esi, 16					; 00000010H

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	DWORD PTR $T4[ebp], esi
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 41   : {

	mov	BYTE PTR __$EHRec$[ebp+8], 5

; 42   : 
; 43   : 	CFile file_object;

	lea	ecx, DWORD PTR _file_object$21[ebp]
	xorps	xmm0, xmm0
	mov	DWORD PTR _file_object$21[ebp+16], 0
	movups	XMMWORD PTR _file_object$21[ebp], xmm0
	call	??0CFile@@QAE@XZ			; CFile::CFile
	mov	BYTE PTR __$EHRec$[ebp+8], 6
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 73   : 		return( nRefs > 1 );

	cmp	DWORD PTR [esi-4], 1

; 499  : 		if( pData->IsShared() )

	jle	SHORT $LN198@Do

; 500  : 		{
; 501  : 			Fork( pData->nDataLength );

	push	DWORD PTR [esi-12]
	lea	ecx, DWORD PTR $T4[ebp]
	call	?Fork@?$CSimpleStringT@_W$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<wchar_t,0>::Fork
	mov	esi, DWORD PTR $T4[ebp]
$LN198@Do:
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 44   : 	BOOL  status = file_object.Open(File.GetBuffer(), CFile::modeRead);

	push	0
	push	0
	push	esi
	lea	ecx, DWORD PTR _file_object$21[ebp]
	call	?Open@CFile@@UAEHPB_WIPAVCFileException@@@Z ; CFile::Open

; 46   : 	if (status == FALSE) return (FALSE);

	lea	ecx, DWORD PTR _file_object$21[ebp]
	test	eax, eax
	jne	SHORT $LN191@Do
	call	??1CFile@@UAE@XZ			; CFile::~CFile
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	lea	edx, DWORD PTR [esi-16]
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 46   : 	if (status == FALSE) return (FALSE);

	mov	BYTE PTR __$EHRec$[ebp+8], 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	or	esi, -1
	mov	eax, esi
	lock	 xadd	 DWORD PTR [edx+12], eax
	dec	eax
	test	eax, eax
	jg	SHORT $LN6@Do

; 89   : 		{
; 90   : 			pStringMgr->Free( this );

	mov	ecx, DWORD PTR [edx]
	push	edx
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+4]
$LN6@Do:

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	eax, DWORD PTR _File$[ebp]
	add	eax, -16				; fffffff0H
	mov	DWORD PTR _pSrcData$1$[ebp], eax

; 882  : 		IAtlStringMgr* pNewStringMgr = pData->pStringMgr->Clone();

	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+16]
	call	eax

; 69   : 		return nRefs < 0;

	mov	ecx, DWORD PTR _pSrcData$1$[ebp]

; 882  : 		IAtlStringMgr* pNewStringMgr = pData->pStringMgr->Clone();

	mov	edx, eax

; 69   : 		return nRefs < 0;

	cmp	DWORD PTR [ecx+12], 0
	lea	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR tv1916[ebp], eax

; 883  : 		if( !pData->IsLocked() && (pNewStringMgr == pData->pStringMgr) )

	jl	$LN428@Do
	cmp	edx, DWORD PTR [ecx]
	jne	$LN428@Do

; 884  : 		{
; 885  : 			pNewData = pData;

	mov	eax, ecx

; 65   : 		_InterlockedIncrement(&nRefs);

	mov	ecx, DWORD PTR tv1916[ebp]
	lock	 inc	 DWORD PTR [ecx]

; 887  : 		}

	jmp	$LN429@Do
$LN191@Do:
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 48   : 	file_object.Close();

	call	?Close@CFile@@UAEXXZ			; CFile::Close

; 49   : 	return (TRUE);

	lea	ecx, DWORD PTR _file_object$21[ebp]
	call	??1CFile@@UAE@XZ			; CFile::~CFile
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	lea	edx, DWORD PTR [esi-16]
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 49   : 	return (TRUE);

	mov	BYTE PTR __$EHRec$[ebp+8], 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	or	esi, -1
	mov	eax, esi
	lock	 xadd	 DWORD PTR [edx+12], eax
	dec	eax
	test	eax, eax
	jg	SHORT $LN220@Do

; 89   : 		{
; 90   : 			pStringMgr->Free( this );

	mov	ecx, DWORD PTR [edx]
	push	edx
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+4]
$LN220@Do:
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 111  : 		NewFile.Format(_T("%s*.%s"), radical, Ext);

	push	DWORD PTR _Ext$[ebp]
	lea	eax, DWORD PTR _NewFile$[ebp]
	push	DWORD PTR _radical$[ebp]
	push	OFFSET ??_C@_1O@KODPLLAD@?$AA?$CF?$AAs?$AA?$CK?$AA?4?$AA?$CF?$AAs@
	push	eax
	call	?Format@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAAXPB_WZZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::Format

; 112  : 		bWorking = finder.FindFile(NewFile);

	mov	edi, DWORD PTR _NewFile$[ebp]
	lea	ecx, DWORD PTR _finder$[ebp]
	add	esp, 16					; 00000010H
	push	0
	push	edi
	call	?FindFile@CFileFind@@UAEHPB_WK@Z	; CFileFind::FindFile

; 113  : 		while (bWorking)

	test	eax, eax
	je	SHORT $LN3@Do
$LL2@Do:

; 114  : 		{		
; 115  : 			bWorking = finder.FindNextFile();

	lea	ecx, DWORD PTR _finder$[ebp]
	call	?FindNextFileW@CFileFind@@UAEHXZ	; CFileFind::FindNextFileW
	mov	DWORD PTR _bWorking$2$[ebp], eax

; 116  : 			CString local = finder.GetFilePath();

	lea	ecx, DWORD PTR _finder$[ebp]
	lea	eax, DWORD PTR _local$23[ebp]
	mov	DWORD PTR _local$23[ebp], 0
	push	eax
	call	?GetFilePath@CFileFind@@UBE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@XZ ; CFileFind::GetFilePath
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxcoll.inl

; 321  : 		SetAtGrow(nIndex, newElement);

	lea	eax, DWORD PTR _local$23[ebp]
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 116  : 			CString local = finder.GetFilePath();

	mov	BYTE PTR __$EHRec$[ebp+8], 7
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxcoll.inl

; 321  : 		SetAtGrow(nIndex, newElement);

	push	eax
	push	DWORD PTR ?List@@3VCStringArray@@A+8
	mov	ecx, OFFSET ?List@@3VCStringArray@@A	; List
	call	?SetAtGrow@CStringArray@@QAEXHABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z ; CStringArray::SetAtGrow
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 119  : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	mov	eax, esi

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	edx, DWORD PTR _local$23[ebp]
	add	edx, -16				; fffffff0H

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	lock	 xadd	 DWORD PTR [edx+12], eax
	dec	eax
	test	eax, eax
	jg	SHORT $LN235@Do

; 89   : 		{
; 90   : 			pStringMgr->Free( this );

	mov	ecx, DWORD PTR [edx]
	push	edx
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+4]
$LN235@Do:
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 113  : 		while (bWorking)

	cmp	DWORD PTR _bWorking$2$[ebp], 0
	jne	SHORT $LL2@Do
$LN3@Do:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxcoll.inl

; 278  : 	{ return m_nSize; }

	mov	ecx, DWORD PTR ?List@@3VCStringArray@@A+8
	mov	eax, ecx
	mov	DWORD PTR _index$1$[ebp], eax
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 122  : 		if (index == 1)

	cmp	eax, 1
	jne	$LN5@Do

; 124  : 			if (File != (radical + _T("(1).") + Ext))

	push	OFFSET ??_C@_19GJNGALLN@?$AA?$CI?$AA1?$AA?$CJ?$AA?4@
	lea	eax, DWORD PTR _radical$[ebp]
	push	eax
	lea	eax, DWORD PTR $T10[ebp]
	push	eax
	call	??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@PB_W@Z ; ATL::operator+
	lea	ecx, DWORD PTR _Ext$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	push	ecx
	push	eax
	lea	eax, DWORD PTR $T11[ebp]
	push	eax
	call	??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@0@Z ; ATL::operator+
	add	esp, 24					; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 377  : 		return( m_pszData );

	mov	eax, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1444 : 		ATLENSURE( AtlIsValidString( psz ) );

	test	eax, eax
	je	$LN499@Do

; 564  : 		return wcscmp( pszA, pszB );

	mov	ecx, DWORD PTR _File$[ebp]
$LL488@Do:
	mov	dx, WORD PTR [ecx]
	cmp	dx, WORD PTR [eax]
	jne	SHORT $LN489@Do
	test	dx, dx
	je	SHORT $LN490@Do
	mov	dx, WORD PTR [ecx+2]
	cmp	dx, WORD PTR [eax+2]
	jne	SHORT $LN489@Do
	add	ecx, 4
	add	eax, 4
	test	dx, dx
	jne	SHORT $LL488@Do
$LN490@Do:
	mov	DWORD PTR $T22[ebp], 0
	jmp	SHORT $LN491@Do
$LN489@Do:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR $T22[ebp], ecx
$LN491@Do:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	edx, DWORD PTR $T11[ebp]

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	mov	eax, esi

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	add	edx, -16				; fffffff0H

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	lock	 xadd	 DWORD PTR [edx+12], eax
	dec	eax
	test	eax, eax
	jg	SHORT $LN266@Do

; 89   : 		{
; 90   : 			pStringMgr->Free( this );

	mov	ecx, DWORD PTR [edx]
	push	edx
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+4]
$LN266@Do:
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 124  : 			if (File != (radical + _T("(1).") + Ext))

	mov	BYTE PTR __$EHRec$[ebp+8], 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	mov	eax, esi

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	edx, DWORD PTR $T10[ebp]
	add	edx, -16				; fffffff0H

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	lock	 xadd	 DWORD PTR [edx+12], eax
	dec	eax
	test	eax, eax
	jg	SHORT $LN275@Do

; 89   : 		{
; 90   : 			pStringMgr->Free( this );

	mov	ecx, DWORD PTR [edx]
	push	edx
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+4]
$LN275@Do:
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 124  : 			if (File != (radical + _T("(1).") + Ext))

	cmp	DWORD PTR $T22[ebp], 0
	je	$LN6@Do

; 126  : 				NewFile.Format(_T("%s(1).%s"), radical, Ext);

	push	DWORD PTR _Ext$[ebp]
	lea	eax, DWORD PTR _NewFile$[ebp]
	push	DWORD PTR _radical$[ebp]
	push	OFFSET ??_C@_1BC@NHBIDBIC@?$AA?$CF?$AAs?$AA?$CI?$AA1?$AA?$CJ?$AA?4?$AA?$CF?$AAs@
	push	eax
	call	?Format@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAAXPB_WZZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::Format
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	edi, DWORD PTR _NewFile$[ebp]
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 126  : 				NewFile.Format(_T("%s(1).%s"), radical, Ext);

	add	esp, 16					; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	add	edi, -16				; fffffff0H

; 882  : 		IAtlStringMgr* pNewStringMgr = pData->pStringMgr->Clone();

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+16]
	call	eax

; 69   : 		return nRefs < 0;

	cmp	DWORD PTR [edi+12], 0
	lea	edx, DWORD PTR [edi+12]

; 882  : 		IAtlStringMgr* pNewStringMgr = pData->pStringMgr->Clone();

	mov	ecx, eax

; 883  : 		if( !pData->IsLocked() && (pNewStringMgr == pData->pStringMgr) )

	jl	SHORT $LN486@Do
	cmp	ecx, DWORD PTR [edi]
	jne	SHORT $LN486@Do

; 884  : 		{
; 885  : 			pNewData = pData;

	mov	eax, edi

; 65   : 		_InterlockedIncrement(&nRefs);

	lock	 inc	 DWORD PTR [edx]

; 887  : 		}

	jmp	SHORT $LN286@Do
$LN486@Do:

; 890  : 			pNewData = pNewStringMgr->Allocate( pData->nDataLength, sizeof( XCHAR ) );

	mov	eax, DWORD PTR [ecx]
	push	2
	push	DWORD PTR [edi+4]
	mov	eax, DWORD PTR [eax]
	call	eax
	mov	DWORD PTR _pNewData$1$[ebp], eax

; 891  : 			if( pNewData == NULL )

	test	eax, eax
	je	$LN487@Do

; 894  : 			}
; 895  : 			pNewData->nDataLength = pData->nDataLength;

	mov	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR [eax+4], ecx

; 59   : 		return (this+1);

	lea	ecx, DWORD PTR [edi+16]

; 896  : 			CopyChars( PXSTR( pNewData->data() ), pData->nDataLength+1,

	mov	edx, DWORD PTR [edi+4]

; 59   : 		return (this+1);

	add	eax, 16					; 00000010H

; 896  : 			CopyChars( PXSTR( pNewData->data() ), pData->nDataLength+1,

	inc	edx
	push	edx
	push	ecx
	push	edx
	push	eax
	call	?CopyChars@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::CopyChars
	mov	eax, DWORD PTR _pNewData$1$[ebp]
	add	esp, 16					; 00000010H
$LN286@Do:

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	ecx, DWORD PTR ___$ReturnUdt$GSCopy$1$[ebp]

; 59   : 		return (this+1);

	add	eax, 16					; 00000010H
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 127  : 				return(NewFile);

	mov	BYTE PTR __$EHRec$[ebp+8], 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	edx, DWORD PTR _Ext$[ebp]
	add	edx, -16				; fffffff0H

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	DWORD PTR [ecx], eax

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	mov	eax, esi
	lock	 xadd	 DWORD PTR [edx+12], eax
	dec	eax
	test	eax, eax
	jg	SHORT $LN310@Do

; 89   : 		{
; 90   : 			pStringMgr->Free( this );

	mov	ecx, DWORD PTR [edx]
	push	edx
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+4]
$LN310@Do:
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 127  : 				return(NewFile);

	mov	BYTE PTR __$EHRec$[ebp+8], 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	mov	eax, esi

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	edx, DWORD PTR _radical$[ebp]
	add	edx, -16				; fffffff0H

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	lock	 xadd	 DWORD PTR [edx+12], eax
	dec	eax
	test	eax, eax
	jg	SHORT $LN319@Do

; 89   : 		{
; 90   : 			pStringMgr->Free( this );

	mov	ecx, DWORD PTR [edx]
	push	edx
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+4]
$LN319@Do:
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 127  : 				return(NewFile);

	mov	BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	lea	ecx, DWORD PTR [edi+12]
	mov	eax, esi
	lock	 xadd	 DWORD PTR [ecx], eax
	dec	eax
$LN496@Do:
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 136  : 	return (File);

	test	eax, eax
	jg	SHORT $LN328@Do
	mov	ecx, DWORD PTR [edi]
	push	edi
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+4]
$LN328@Do:
	lea	ecx, DWORD PTR _finder$[ebp]
	call	??1CFileFind@@UAE@XZ			; CFileFind::~CFileFind
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _File$[ebp]
	add	edx, -16				; fffffff0H
	lock	 xadd	 DWORD PTR [edx+12], esi
	dec	esi
	test	esi, esi
	jg	$LN480@Do
	mov	ecx, DWORD PTR [edx]
	push	edx
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+4]
	jmp	$LN480@Do
$LN428@Do:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 890  : 			pNewData = pNewStringMgr->Allocate( pData->nDataLength, sizeof( XCHAR ) );

	mov	eax, DWORD PTR [edx]
	push	2
	push	DWORD PTR [ecx+4]
	mov	ecx, edx
	mov	eax, DWORD PTR [eax]
	call	eax
	mov	edx, eax
	mov	DWORD PTR _pNewData$1$[ebp], edx

; 891  : 			if( pNewData == NULL )

	test	edx, edx
	je	$LN487@Do

; 894  : 			}
; 895  : 			pNewData->nDataLength = pData->nDataLength;

	mov	eax, DWORD PTR _pSrcData$1$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx

; 59   : 		return (this+1);

	lea	ecx, DWORD PTR [eax+16]

; 896  : 			CopyChars( PXSTR( pNewData->data() ), pData->nDataLength+1,

	mov	edx, DWORD PTR [eax+4]

; 59   : 		return (this+1);

	mov	eax, DWORD PTR _pNewData$1$[ebp]

; 896  : 			CopyChars( PXSTR( pNewData->data() ), pData->nDataLength+1,

	inc	edx
	push	edx
	push	ecx
	push	edx

; 59   : 		return (this+1);

	add	eax, 16					; 00000010H

; 896  : 			CopyChars( PXSTR( pNewData->data() ), pData->nDataLength+1,

	push	eax
	call	?CopyChars@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::CopyChars
	mov	eax, DWORD PTR _pNewData$1$[ebp]
	add	esp, 16					; 00000010H
$LN429@Do:

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	ecx, DWORD PTR ___$ReturnUdt$GSCopy$1$[ebp]

; 59   : 		return (this+1);

	add	eax, 16					; 00000010H
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 136  : 	return (File);

	mov	BYTE PTR __$EHRec$[ebp+8], 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	edx, DWORD PTR _Ext$[ebp]
	add	edx, -16				; fffffff0H

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	DWORD PTR [ecx], eax

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	mov	eax, esi
	lock	 xadd	 DWORD PTR [edx+12], eax
	dec	eax
	test	eax, eax
	jg	SHORT $LN453@Do

; 89   : 		{
; 90   : 			pStringMgr->Free( this );

	mov	ecx, DWORD PTR [edx]
	push	edx
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+4]
$LN453@Do:
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 136  : 	return (File);

	mov	BYTE PTR __$EHRec$[ebp+8], 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	mov	eax, esi

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	edx, DWORD PTR _radical$[ebp]
	add	edx, -16				; fffffff0H

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	lock	 xadd	 DWORD PTR [edx+12], eax
	dec	eax
	test	eax, eax
	jg	SHORT $LN462@Do

; 89   : 		{
; 90   : 			pStringMgr->Free( this );

	mov	ecx, DWORD PTR [edx]
	push	edx
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+4]
$LN462@Do:
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 136  : 	return (File);

	mov	BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	add	edi, -16				; fffffff0H

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	mov	eax, esi
	lock	 xadd	 DWORD PTR [edi+12], eax
	dec	eax

; 90   : 			pStringMgr->Free( this );

	jmp	$LN496@Do
$LN5@Do:
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 69   : 	if (iArraySize <= 0)

	test	eax, eax
	jle	SHORT $LN342@Do

; 70   : 		return;
; 71   : 
; 72   : 	int iCSSize = sizeof(CString*);
; 73   : 	void* pArrayStart = (void *)&csa[0];
; 74   : 
; 75   : 	if (bDescending)
; 76   : 		qsort(pArrayStart, iArraySize, iCSSize, CompareDescending);
; 77   : 	else
; 78   : 		qsort(pArrayStart, iArraySize, iCSSize, CompareAscending);

	push	OFFSET ?CompareAscending@@YAHPBX0@Z	; CompareAscending
	push	4
	push	eax
	push	DWORD PTR ?List@@3VCStringArray@@A+4
	call	_qsort
	mov	ecx, DWORD PTR ?List@@3VCStringArray@@A+8
	add	esp, 16					; 00000010H
	mov	eax, DWORD PTR _index$1$[ebp]
$LN342@Do:

; 133  : 			return (BuildName(List.GetAt(index - 2)));

	lea	edx, DWORD PTR [eax-2]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxcoll.inl

; 289  : 		if( nIndex < 0 || nIndex >= m_nSize )

	test	edx, edx
	js	$LN356@Do
	cmp	edx, ecx
	jge	$LN356@Do

; 291  : 		return m_pData[nIndex]; }

	mov	eax, DWORD PTR ?List@@3VCStringArray@@A+4
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 133  : 			return (BuildName(List.GetAt(index - 2)));

	push	ecx
	mov	DWORD PTR _this$[ebp], esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	eax, DWORD PTR [eax+edx*4]
	mov	DWORD PTR tv1955[ebp], eax
	lea	ecx, DWORD PTR [eax-16]
	mov	DWORD PTR _pNewData$1$[ebp], ecx

; 882  : 		IAtlStringMgr* pNewStringMgr = pData->pStringMgr->Clone();

	mov	ecx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+16]
	call	eax
	mov	edx, eax

; 69   : 		return nRefs < 0;

	mov	eax, DWORD PTR _pNewData$1$[ebp]
	cmp	DWORD PTR [eax+12], 0
	lea	ecx, DWORD PTR [eax+12]

; 883  : 		if( !pData->IsLocked() && (pNewStringMgr == pData->pStringMgr) )

	jl	SHORT $LN366@Do
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN366@Do

; 65   : 		_InterlockedIncrement(&nRefs);

	lock	 inc	 DWORD PTR [ecx]

; 887  : 		}

	jmp	SHORT $LN367@Do
$LN366@Do:

; 890  : 			pNewData = pNewStringMgr->Allocate( pData->nDataLength, sizeof( XCHAR ) );

	lea	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [edx]
	push	2
	push	DWORD PTR [ecx]
	mov	DWORD PTR tv1922[ebp], ecx
	mov	ecx, edx
	mov	eax, DWORD PTR [eax]
	call	eax
	mov	DWORD PTR _pNewData$1$[ebp], eax

; 891  : 			if( pNewData == NULL )

	test	eax, eax
	je	$LN487@Do

; 894  : 			}
; 895  : 			pNewData->nDataLength = pData->nDataLength;

	mov	edx, DWORD PTR tv1922[ebp]
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax+4], ecx

; 59   : 		return (this+1);

	add	eax, 16					; 00000010H

; 896  : 			CopyChars( PXSTR( pNewData->data() ), pData->nDataLength+1,

	mov	ecx, DWORD PTR [edx]
	inc	ecx
	push	ecx
	push	DWORD PTR tv1955[ebp]
	push	ecx
	push	eax
	call	?CopyChars@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::CopyChars
	mov	eax, DWORD PTR _pNewData$1$[ebp]
	add	esp, 16					; 00000010H
$LN367@Do:

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	ecx, DWORD PTR _this$[ebp]

; 59   : 		return (this+1);

	add	eax, 16					; 00000010H

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	DWORD PTR [ecx], eax
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 133  : 			return (BuildName(List.GetAt(index - 2)));

	mov	ecx, DWORD PTR ___$ReturnUdt$GSCopy$1$[ebp]
	push	ecx
	call	?BuildName@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z ; AjustFileName::BuildName
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	mov	eax, esi

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	edx, DWORD PTR _Ext$[ebp]
	add	edx, -16				; fffffff0H

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	lock	 xadd	 DWORD PTR [edx+12], eax
	dec	eax
	test	eax, eax
	jg	SHORT $LN391@Do

; 89   : 		{
; 90   : 			pStringMgr->Free( this );

	mov	ecx, DWORD PTR [edx]
	push	edx
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+4]
$LN391@Do:
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 133  : 			return (BuildName(List.GetAt(index - 2)));

	mov	BYTE PTR __$EHRec$[ebp+8], 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	mov	eax, esi

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	edx, DWORD PTR _radical$[ebp]
	add	edx, -16				; fffffff0H

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	lock	 xadd	 DWORD PTR [edx+12], eax
	dec	eax
	test	eax, eax
	jg	SHORT $LN400@Do

; 89   : 		{
; 90   : 			pStringMgr->Free( this );

	mov	ecx, DWORD PTR [edx]
	push	edx
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+4]
$LN400@Do:
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 133  : 			return (BuildName(List.GetAt(index - 2)));

	mov	BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	add	edi, -16				; fffffff0H

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	mov	eax, esi
	lock	 xadd	 DWORD PTR [edi+12], eax
	dec	eax
	test	eax, eax
	jg	SHORT $LN409@Do

; 89   : 		{
; 90   : 			pStringMgr->Free( this );

	mov	ecx, DWORD PTR [edi]
	push	edi
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+4]
$LN409@Do:
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 133  : 			return (BuildName(List.GetAt(index - 2)));

	lea	ecx, DWORD PTR _finder$[ebp]
	call	??1CFileFind@@UAE@XZ			; CFileFind::~CFileFind
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	eax, DWORD PTR _File$[ebp]
	add	eax, -16				; fffffff0H

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	lock	 xadd	 DWORD PTR [eax+12], esi
	dec	esi
	test	esi, esi
	jg	SHORT $LN480@Do

; 89   : 		{
; 90   : 			pStringMgr->Free( this );

	mov	ecx, DWORD PTR [eax]
	push	eax
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+4]
$LN480@Do:
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 136  : 	return (File);

	mov	eax, DWORD PTR ___$ReturnUdt$GSCopy$1$[ebp]

; 137  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
$LN487@Do:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 893  : 				ThrowMemoryException();

	call	?ThrowMemoryException@?$CSimpleStringT@_W$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<wchar_t,0>::ThrowMemoryException
$LN498@Do:

; 205  : 		ATLENSURE( pStringMgr != NULL );

	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN499@Do:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1444 : 		ATLENSURE( AtlIsValidString( psz ) );

	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN356@Do:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxcoll.inl

; 290  : 			AfxThrowInvalidArgException();

	call	?AfxThrowInvalidArgException@@YGXXZ	; AfxThrowInvalidArgException
$LN493@Do:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Do@AjustFileName@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z$0:
	lea	ecx, DWORD PTR _File$[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
__unwindfunclet$?Do@AjustFileName@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z$1:
	lea	ecx, DWORD PTR _finder$[ebp]
	jmp	??1CFileFind@@UAE@XZ			; CFileFind::~CFileFind
__unwindfunclet$?Do@AjustFileName@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z$2:
	lea	ecx, DWORD PTR _NewFile$[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
__unwindfunclet$?Do@AjustFileName@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z$4:
	lea	ecx, DWORD PTR _radical$[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
__unwindfunclet$?Do@AjustFileName@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z$6:
	lea	ecx, DWORD PTR _Ext$[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
__unwindfunclet$?Do@AjustFileName@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z$20:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
__unwindfunclet$?Do@AjustFileName@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z$21:
	lea	ecx, DWORD PTR _file_object$21[ebp]
	jmp	??1CFile@@UAE@XZ			; CFile::~CFile
__unwindfunclet$?Do@AjustFileName@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z$8:
	lea	ecx, DWORD PTR _local$23[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
__unwindfunclet$?Do@AjustFileName@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z$9:
	lea	ecx, DWORD PTR $T10[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
__ehhandler$?Do@AjustFileName@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-96]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Do@AjustFileName@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Do@AjustFileName@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z ENDP ; AjustFileName::Do
; Function compile flags: /Ogtp
;	COMDAT ?__autoclassinit2@CFileFind@@QAEXI@Z
_TEXT	SEGMENT
_classSize$dead$ = 8					; size = 4
?__autoclassinit2@CFileFind@@QAEXI@Z PROC		; CFileFind::__autoclassinit2, COMDAT
; _this$ = ecx
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [ecx], xmm0
	movq	QWORD PTR [ecx+16], xmm0
	mov	DWORD PTR [ecx+24], 0
	ret	4
?__autoclassinit2@CFileFind@@QAEXI@Z ENDP		; CFileFind::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File I:\Projets\AES\AES\AES\AjustFileName.cpp
;	COMDAT ?BuildName@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z
_TEXT	SEGMENT
___$ReturnUdt$GSCopy$ = -36				; size = 4
$T1 = -32						; size = 4
_Begin_of_File$ = -28					; size = 4
_Index$ = -24						; size = 4
_End_of_File$ = -20					; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_File$ = 12						; size = 4
?BuildName@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z PROC ; AjustFileName::BuildName, COMDAT
; _this$dead$ = ecx

; 140  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?BuildName@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ebx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR ___$ReturnUdt$GSCopy$[ebp], ebx
	mov	DWORD PTR $T1[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR [ebx], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxstr.h

; 52   : 		return( AfxGetStringManager() );

	call	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager
	mov	ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 205  : 		ATLENSURE( pStringMgr != NULL );

	test	ecx, ecx
	je	$LN101@BuildName

; 206  : 		CStringData* pData = pStringMgr->GetNilString();

	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+12]

; 59   : 		return (this+1);

	add	eax, 16					; 00000010H

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	DWORD PTR [ebx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 613  : 		return wcsrchr( psz, ch );

	push	41					; 00000029H
	push	DWORD PTR _File$[ebp]
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 150  : 	return (NewFile);

	mov	DWORD PTR $T1[ebp], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 613  : 		return wcsrchr( psz, ch );

	call	_wcsrchr

; 1811 : 		PCXSTR psz = StringTraits::StringFindCharRev( this->GetString(), ch );

	mov	esi, eax

; 613  : 		return wcsrchr( psz, ch );

	add	esp, 8

; 1814 : 		return( (psz == NULL) ? -1 : int( psz - this->GetString() ) );

	mov	eax, DWORD PTR _File$[ebp]
	test	esi, esi
	jne	SHORT $LN32@BuildName
	or	esi, -1
	jmp	SHORT $LN33@BuildName
$LN32@BuildName:
	sub	esi, eax
	sar	esi, 1
$LN33@BuildName:

; 613  : 		return wcsrchr( psz, ch );

	push	40					; 00000028H
	push	eax
	call	_wcsrchr

; 1811 : 		PCXSTR psz = StringTraits::StringFindCharRev( this->GetString(), ch );

	mov	edi, eax

; 613  : 		return wcsrchr( psz, ch );

	add	esp, 8

; 1814 : 		return( (psz == NULL) ? -1 : int( psz - this->GetString() ) );

	mov	eax, DWORD PTR _File$[ebp]
	test	edi, edi
	jne	SHORT $LN42@BuildName
	or	edi, -1
	jmp	SHORT $LN43@BuildName
$LN42@BuildName:
	sub	edi, eax
	sar	edi, 1
$LN43@BuildName:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

	mov	eax, DWORD PTR [eax-12]
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 144  : 	CString End_of_File = File.Right(File.GetLength() - (index_0 + 1));

	lea	ecx, DWORD PTR _File$[ebp]
	sub	eax, esi
	mov	DWORD PTR _End_of_File$[ebp], 0
	dec	eax
	push	eax
	lea	eax, DWORD PTR _End_of_File$[ebp]
	push	eax
	call	?Right@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBE?AV12@H@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::Right

; 145  : 	CString Begin_of_File = File.Left(index_1);

	push	edi
	lea	eax, DWORD PTR _Begin_of_File$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	push	eax
	lea	ecx, DWORD PTR _File$[ebp]
	mov	DWORD PTR _Begin_of_File$[ebp], 0
	call	?Left@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBE?AV12@H@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::Left

; 146  : 	CString Index = File.Mid(index_1+1, index_0 - index_1-1);

	sub	esi, edi
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	dec	esi
	mov	DWORD PTR _Index$[ebp], 0
	push	esi
	lea	eax, DWORD PTR [edi+1]
	push	eax
	lea	eax, DWORD PTR _Index$[ebp]
	push	eax
	lea	ecx, DWORD PTR _File$[ebp]
	call	?Mid@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBE?AV12@HH@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::Mid
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 147  : 	int cpt = _wtoi(Index);

	mov	esi, DWORD PTR _Index$[ebp]
	push	esi
	call	__wtoi

; 149  : 	NewFile.Format(_T("%s(%d)%s"), Begin_of_File, cpt, End_of_File);

	push	DWORD PTR _End_of_File$[ebp]
	mov	edi, DWORD PTR _Begin_of_File$[ebp]
	inc	eax
	push	eax
	push	edi
	push	OFFSET ??_C@_1BC@LJIHGCAI@?$AA?$CF?$AAs?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?$CF?$AAs@
	push	ebx
	call	?Format@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAAXPB_WZZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::Format
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	lea	edx, DWORD PTR [esi-16]
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 150  : 	return (NewFile);

	mov	BYTE PTR __$EHRec$[ebp+8], 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	or	esi, -1
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 149  : 	NewFile.Format(_T("%s(%d)%s"), Begin_of_File, cpt, End_of_File);

	add	esp, 24					; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	mov	eax, esi
	lock	 xadd	 DWORD PTR [edx+12], eax
	dec	eax
	test	eax, eax
	jg	SHORT $LN69@BuildName

; 89   : 		{
; 90   : 			pStringMgr->Free( this );

	mov	ecx, DWORD PTR [edx]
	push	edx
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+4]
$LN69@BuildName:
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 150  : 	return (NewFile);

	mov	BYTE PTR __$EHRec$[ebp+8], 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	add	edi, -16				; fffffff0H

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	mov	eax, esi
	lock	 xadd	 DWORD PTR [edi+12], eax
	dec	eax
	test	eax, eax
	jg	SHORT $LN78@BuildName

; 89   : 		{
; 90   : 			pStringMgr->Free( this );

	mov	ecx, DWORD PTR [edi]
	push	edi
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+4]
$LN78@BuildName:
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 150  : 	return (NewFile);

	mov	BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	mov	eax, esi

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	edx, DWORD PTR _End_of_File$[ebp]
	add	edx, -16				; fffffff0H

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	lock	 xadd	 DWORD PTR [edx+12], eax
	dec	eax
	test	eax, eax
	jg	SHORT $LN87@BuildName

; 89   : 		{
; 90   : 			pStringMgr->Free( this );

	mov	ecx, DWORD PTR [edx]
	push	edx
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+4]
$LN87@BuildName:
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 150  : 	return (NewFile);

	mov	BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	eax, DWORD PTR _File$[ebp]
	add	eax, -16				; fffffff0H

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	lock	 xadd	 DWORD PTR [eax+12], esi
	dec	esi
	test	esi, esi
	jg	SHORT $LN96@BuildName

; 89   : 		{
; 90   : 			pStringMgr->Free( this );

	mov	ecx, DWORD PTR [eax]
	push	eax
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+4]
$LN96@BuildName:
; File I:\Projets\AES\AES\AES\AjustFileName.cpp

; 150  : 	return (NewFile);

	mov	eax, ebx

; 151  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
$LN101@BuildName:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 205  : 		ATLENSURE( pStringMgr != NULL );

	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN99@BuildName:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?BuildName@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z$0:
	lea	ecx, DWORD PTR _File$[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
__unwindfunclet$?BuildName@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z$1:
	mov	eax, DWORD PTR $T1[ebp]
	and	eax, 1
	je	$LN5@BuildName
	and	DWORD PTR $T1[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$GSCopy$[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
$LN5@BuildName:
	ret	0
__unwindfunclet$?BuildName@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z$2:
	lea	ecx, DWORD PTR _End_of_File$[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
__unwindfunclet$?BuildName@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z$3:
	lea	ecx, DWORD PTR _Begin_of_File$[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
__unwindfunclet$?BuildName@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z$4:
	lea	ecx, DWORD PTR _Index$[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
__ehhandler$?BuildName@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?BuildName@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?BuildName@AjustFileName@@AAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V23@@Z ENDP ; AjustFileName::BuildName
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlcore.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
;	COMDAT ??9ATL@@YA_NABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@0@Z
_TEXT	SEGMENT
_str1$ = 8						; size = 4
_str2$ = 12						; size = 4
??9ATL@@YA_NABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@0@Z PROC ; ATL::operator!=, COMDAT

; 2513 : 	{

	push	ebp
	mov	ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 377  : 		return( m_pszData );

	mov	eax, DWORD PTR _str2$[ebp]
	mov	ecx, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlcore.h

; 81   : 	return (psz != NULL);

	test	ecx, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1444 : 		ATLENSURE( AtlIsValidString( psz ) );

	je	SHORT $LN27@operator

; 564  : 		return wcscmp( pszA, pszB );

	mov	eax, DWORD PTR _str1$[ebp]
	mov	eax, DWORD PTR [eax]
$LL21@operator:
	mov	dx, WORD PTR [eax]
	cmp	dx, WORD PTR [ecx]
	jne	SHORT $LN22@operator
	test	dx, dx
	je	SHORT $LN23@operator
	mov	dx, WORD PTR [eax+2]
	cmp	dx, WORD PTR [ecx+2]
	jne	SHORT $LN22@operator
	add	eax, 4
	add	ecx, 4
	test	dx, dx
	jne	SHORT $LL21@operator
$LN23@operator:
	xor	eax, eax

; 2514 : 		return( str1.Compare( str2 ) != 0 );

	test	eax, eax
	setne	al

; 2515 : 	}

	pop	ebp
	ret	0
$LN22@operator:

; 564  : 		return wcscmp( pszA, pszB );

	sbb	eax, eax
	or	eax, 1

; 2514 : 		return( str1.Compare( str2 ) != 0 );

	test	eax, eax
	setne	al

; 2515 : 	}

	pop	ebp
	ret	0
$LN27@operator:

; 1444 : 		ATLENSURE( AtlIsValidString( psz ) );

	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN25@operator:
	int	3
??9ATL@@YA_NABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@0@Z ENDP ; ATL::operator!=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
;	COMDAT ??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@0@Z
_TEXT	SEGMENT
$T9 = -32						; size = 4
$T10 = -28						; size = 4
$T11 = -24						; size = 4
tv384 = -20						; size = 4
$T1 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
$T12 = 12						; size = 4
_str1$ = 12						; size = 4
_str2$ = 16						; size = 4
??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@0@Z PROC ; ATL::operator+, COMDAT

; 2383 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 523  : 		IAtlStringMgr* pStringMgr = GetData()->pStringMgr;

	mov	esi, DWORD PTR _str1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 2383 : 	{

	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR $T1[ebp], 0
	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [edi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 523  : 		IAtlStringMgr* pStringMgr = GetData()->pStringMgr;

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax-16]

; 524  : 		return pStringMgr ? pStringMgr->Clone() : NULL;

	test	ecx, ecx
	je	SHORT $LN70@operator
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+16]
	mov	ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1434 : 		if(pStringMgr) { return pStringMgr; }

	test	ecx, ecx
	jne	SHORT $LN21@operator
$LN70@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxstr.h

; 52   : 		return( AfxGetStringManager() );

	call	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1437 : 		return pStringMgr->Clone();

	mov	ecx, eax
	mov	edx, DWORD PTR [eax]
	call	DWORD PTR [edx+16]
	mov	ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 205  : 		ATLENSURE( pStringMgr != NULL );

	test	ecx, ecx
	je	$LN75@operator
$LN21@operator:

; 206  : 		CStringData* pData = pStringMgr->GetNilString();

	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+12]

; 59   : 		return (this+1);

	add	eax, 16					; 00000010H
	mov	DWORD PTR tv384[ebp], eax

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	DWORD PTR [edi], eax

; 519  : 		return( GetData()->nDataLength );

	mov	eax, DWORD PTR _str2$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 2388 : 		return( strResult );

	mov	DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

	mov	ecx, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 2388 : 		return( strResult );

	mov	DWORD PTR $T1[ebp], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR $T9[ebp], eax
	mov	edx, DWORD PTR [ecx-12]
	mov	DWORD PTR $T11[ebp], ecx
	mov	eax, DWORD PTR [eax-12]
	mov	DWORD PTR $T10[ebp], eax
	mov	DWORD PTR $T12[ebp], edx

; 765  : 		int nNewLength = nLength1+nLength2;

	lea	ebx, DWORD PTR [edx+eax]

; 804  : 		if (nLength < 0)

	test	ebx, ebx
	js	SHORT $LN63@operator

; 805  : 			AtlThrow(E_INVALIDARG);
; 806  : 
; 807  : 		CStringData* pOldData = GetData();
; 808  : 		int nShared = 1-pOldData->nRefs;  // nShared < 0 means true, >= 0 means false

	mov	eax, DWORD PTR tv384[ebp]
	mov	ecx, 1
	sub	ecx, DWORD PTR [eax-4]

; 809  : 		int nTooShort = pOldData->nAllocLength-nLength;  // nTooShort < 0 means true, >= 0 means false

	mov	eax, DWORD PTR [eax-8]
	sub	eax, ebx

; 810  : 		if( (nShared|nTooShort) < 0 )  // If either sign bit is set (i.e. either is less than zero), we need to copy data

	or	ecx, eax
	jge	SHORT $LN53@operator

; 811  : 		{
; 812  : 			PrepareWrite2( nLength );

	push	ebx
	mov	ecx, edi
	call	?PrepareWrite2@?$CSimpleStringT@_W$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<wchar_t,0>::PrepareWrite2
	mov	edx, DWORD PTR $T12[ebp]
$LN53@operator:

; 508  : 		return( PrepareWrite( nMinBufferLength ) );

	mov	esi, DWORD PTR [edi]

; 767  : 		CopyChars( pszBuffer, nLength1, psz1, nLength1 );

	push	edx
	push	DWORD PTR $T11[ebp]
	push	edx
	push	esi
	call	?CopyChars@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::CopyChars

; 768  : 		CopyChars( pszBuffer+nLength1, nLength2, psz2, nLength2 );

	mov	eax, DWORD PTR $T10[ebp]
	push	eax
	push	DWORD PTR $T9[ebp]
	push	eax
	mov	eax, DWORD PTR $T12[ebp]
	lea	eax, DWORD PTR [esi+eax*2]
	push	eax
	call	?CopyChars@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::CopyChars

; 871  : 		if( nLength < 0 || nLength > GetData()->nAllocLength)

	mov	eax, DWORD PTR [edi]

; 768  : 		CopyChars( pszBuffer+nLength1, nLength2, psz2, nLength2 );

	add	esp, 32					; 00000020H

; 871  : 		if( nLength < 0 || nLength > GetData()->nAllocLength)

	cmp	ebx, DWORD PTR [eax-8]
	jg	SHORT $LN63@operator

; 873  : 
; 874  : 		GetData()->nDataLength = nLength;

	mov	DWORD PTR [eax-12], ebx

; 875  : 		m_pszData[nLength] = 0;

	xor	eax, eax
	mov	ecx, DWORD PTR [edi]
	mov	WORD PTR [ecx+ebx*2], ax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 2388 : 		return( strResult );

	mov	eax, edi

; 2389 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN63@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 872  : 			AtlThrow(E_INVALIDARG);

	push	-2147024809				; 80070057H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN75@operator:

; 205  : 		ATLENSURE( pStringMgr != NULL );

	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN72@operator:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@0@Z$0:
	mov	eax, DWORD PTR $T1[ebp]
	and	eax, 1
	je	$LN4@operator
	and	DWORD PTR $T1[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
$LN4@operator:
	ret	0
__ehhandler$??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@0@Z ENDP ; ATL::operator+
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
;	COMDAT ?Left@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBE?AV12@H@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_nCount$ = 12						; size = 4
?Left@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBE?AV12@H@Z PROC ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::Left, COMDAT
; _this$ = ecx

; 2147 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

	mov	eax, DWORD PTR _nCount$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 2147 : 	{

	push	ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

	mov	ebx, DWORD PTR [ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 2147 : 	{

	push	esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

	xor	esi, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 2147 : 	{

	mov	DWORD PTR _this$1$[ebp], ecx

; 2153 : 		if( nCount >= nLength )

	mov	ecx, DWORD PTR [ebx-16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

	test	eax, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 2147 : 	{

	push	edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

	cmovns	esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 2153 : 		if( nCount >= nLength )

	lea	edi, DWORD PTR [ebx-16]
	cmp	esi, DWORD PTR [ebx-12]
	jl	SHORT $LN3@Left
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 882  : 		IAtlStringMgr* pNewStringMgr = pData->pStringMgr->Clone();

	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+16]

; 69   : 		return nRefs < 0;

	cmp	DWORD PTR [edi+12], 0

; 882  : 		IAtlStringMgr* pNewStringMgr = pData->pStringMgr->Clone();

	mov	ecx, eax

; 69   : 		return nRefs < 0;

	lea	eax, DWORD PTR [edi+12]

; 883  : 		if( !pData->IsLocked() && (pNewStringMgr == pData->pStringMgr) )

	jl	SHORT $LN19@Left
	cmp	ecx, DWORD PTR [edi]
	jne	SHORT $LN19@Left

; 65   : 		_InterlockedIncrement(&nRefs);

	lock	 inc	 DWORD PTR [eax]

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 59   : 		return (this+1);

	lea	ecx, DWORD PTR [edi+16]
	pop	edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 2159 : 	}

	pop	esi
	pop	ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	DWORD PTR [eax], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 2159 : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
$LN19@Left:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 890  : 			pNewData = pNewStringMgr->Allocate( pData->nDataLength, sizeof( XCHAR ) );

	mov	eax, DWORD PTR [ecx]
	lea	esi, DWORD PTR [edi+4]
	push	2
	push	DWORD PTR [esi]
	call	DWORD PTR [eax]
	mov	edi, eax

; 891  : 			if( pNewData == NULL )

	test	edi, edi
	je	$LN80@Left

; 892  : 			{
; 893  : 				ThrowMemoryException();
; 894  : 			}
; 895  : 			pNewData->nDataLength = pData->nDataLength;

	mov	ecx, DWORD PTR [esi]

; 59   : 		return (this+1);

	lea	eax, DWORD PTR [edi+16]

; 895  : 			pNewData->nDataLength = pData->nDataLength;

	mov	DWORD PTR [edi+4], ecx

; 896  : 			CopyChars( PXSTR( pNewData->data() ), pData->nDataLength+1,

	mov	ecx, DWORD PTR [esi]
	inc	ecx
	push	ecx
	push	ebx
	push	ecx
	push	eax
	call	?CopyChars@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::CopyChars

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 59   : 		return (this+1);

	lea	ecx, DWORD PTR [edi+16]

; 896  : 			CopyChars( PXSTR( pNewData->data() ), pData->nDataLength+1,

	add	esp, 16					; 00000010H

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	DWORD PTR [eax], ecx
	pop	edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 2159 : 	}

	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN3@Left:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 524  : 		return pStringMgr ? pStringMgr->Clone() : NULL;

	test	ecx, ecx
	je	SHORT $LN79@Left
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+16]
	mov	ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1434 : 		if(pStringMgr) { return pStringMgr; }

	test	ecx, ecx
	jne	SHORT $LN38@Left
$LN79@Left:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxstr.h

; 52   : 		return( AfxGetStringManager() );

	call	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1437 : 		return pStringMgr->Clone();

	mov	ecx, eax
	mov	edx, DWORD PTR [eax]
	call	DWORD PTR [edx+16]
	mov	ecx, eax
$LN38@Left:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 529  : 		return( m_pszData );

	mov	ebx, DWORD PTR _this$1$[ebp]
	mov	ebx, DWORD PTR [ebx]

; 245  : 		ATLENSURE( pStringMgr != NULL );

	test	ecx, ecx
	je	SHORT $LN83@Left

; 246  : 
; 247  : 		if(pchSrc == NULL && nLength != 0)

	test	ebx, ebx
	jne	SHORT $LN62@Left
	test	esi, esi
	jne	SHORT $LN71@Left
$LN62@Left:

; 248  : 			AtlThrow(E_INVALIDARG);
; 249  : 
; 250  : 		CStringData* pData = pStringMgr->Allocate( nLength, sizeof( XCHAR ) );

	mov	eax, DWORD PTR [ecx]
	push	2
	push	esi
	call	DWORD PTR [eax]

; 251  : 		if( pData == NULL )

	test	eax, eax
	je	SHORT $LN80@Left

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]

; 59   : 		return (this+1);

	add	eax, 16					; 00000010H

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	DWORD PTR [edi], eax

; 871  : 		if( nLength < 0 || nLength > GetData()->nAllocLength)

	test	esi, esi
	js	SHORT $LN71@Left
	cmp	esi, DWORD PTR [eax-8]
	jg	SHORT $LN71@Left

; 873  : 
; 874  : 		GetData()->nDataLength = nLength;

	mov	DWORD PTR [eax-12], esi

; 875  : 		m_pszData[nLength] = 0;

	xor	eax, eax
	mov	ecx, DWORD PTR [edi]

; 257  : 		CopyChars( m_pszData, nLength, pchSrc, nLength );

	push	esi
	push	ebx
	push	esi

; 875  : 		m_pszData[nLength] = 0;

	mov	WORD PTR [ecx+esi*2], ax

; 257  : 		CopyChars( m_pszData, nLength, pchSrc, nLength );

	push	DWORD PTR [edi]
	call	?CopyChars@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::CopyChars
	add	esp, 16					; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 2158 : 		return( CStringT( this->GetString(), nCount, GetManager() ) );

	mov	eax, edi
	pop	edi

; 2159 : 	}

	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN71@Left:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 872  : 			AtlThrow(E_INVALIDARG);

	push	-2147024809				; 80070057H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN83@Left:

; 245  : 		ATLENSURE( pStringMgr != NULL );

	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN80@Left:

; 252  : 		{
; 253  : 			ThrowMemoryException();

	call	?ThrowMemoryException@?$CSimpleStringT@_W$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<wchar_t,0>::ThrowMemoryException
$LN81@Left:
	int	3
?Left@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBE?AV12@H@Z ENDP ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::Left
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
;	COMDAT ?Right@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBE?AV12@H@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
tv492 = 12						; size = 4
_nCount$ = 12						; size = 4
?Right@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBE?AV12@H@Z PROC ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::Right, COMDAT
; _this$ = ecx

; 2131 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

	mov	eax, DWORD PTR _nCount$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 2131 : 	{

	push	ebx
	push	esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

	xor	esi, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 2131 : 	{

	mov	DWORD PTR _this$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

	test	eax, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 2131 : 	{

	push	edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

	cmovns	esi, eax
	mov	eax, DWORD PTR [ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 2137 : 		if( nCount >= nLength )

	mov	ecx, DWORD PTR [eax-16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

	mov	DWORD PTR tv492[ebp], eax
	mov	ebx, DWORD PTR [eax-12]
	lea	edi, DWORD PTR [eax-16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 2137 : 		if( nCount >= nLength )

	cmp	esi, ebx
	jl	SHORT $LN3@Right
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 882  : 		IAtlStringMgr* pNewStringMgr = pData->pStringMgr->Clone();

	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+16]

; 69   : 		return nRefs < 0;

	cmp	DWORD PTR [edi+12], 0

; 882  : 		IAtlStringMgr* pNewStringMgr = pData->pStringMgr->Clone();

	mov	ecx, eax

; 69   : 		return nRefs < 0;

	lea	eax, DWORD PTR [edi+12]

; 883  : 		if( !pData->IsLocked() && (pNewStringMgr == pData->pStringMgr) )

	jl	SHORT $LN19@Right
	cmp	ecx, DWORD PTR [edi]
	jne	SHORT $LN19@Right

; 65   : 		_InterlockedIncrement(&nRefs);

	lock	 inc	 DWORD PTR [eax]

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 59   : 		return (this+1);

	lea	ecx, DWORD PTR [edi+16]
	pop	edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 2143 : 	}

	pop	esi
	pop	ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	DWORD PTR [eax], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 2143 : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
$LN19@Right:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 890  : 			pNewData = pNewStringMgr->Allocate( pData->nDataLength, sizeof( XCHAR ) );

	mov	eax, DWORD PTR [ecx]
	lea	esi, DWORD PTR [edi+4]
	push	2
	push	DWORD PTR [esi]
	call	DWORD PTR [eax]
	mov	edi, eax

; 891  : 			if( pNewData == NULL )

	test	edi, edi
	je	$LN80@Right

; 892  : 			{
; 893  : 				ThrowMemoryException();
; 894  : 			}
; 895  : 			pNewData->nDataLength = pData->nDataLength;

	mov	ecx, DWORD PTR [esi]

; 59   : 		return (this+1);

	lea	eax, DWORD PTR [edi+16]

; 895  : 			pNewData->nDataLength = pData->nDataLength;

	mov	DWORD PTR [edi+4], ecx

; 896  : 			CopyChars( PXSTR( pNewData->data() ), pData->nDataLength+1,

	mov	ecx, DWORD PTR [esi]
	inc	ecx
	push	ecx
	push	DWORD PTR tv492[ebp]
	push	ecx
	push	eax
	call	?CopyChars@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::CopyChars

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 59   : 		return (this+1);

	lea	ecx, DWORD PTR [edi+16]

; 896  : 			CopyChars( PXSTR( pNewData->data() ), pData->nDataLength+1,

	add	esp, 16					; 00000010H

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	DWORD PTR [eax], ecx
	pop	edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 2143 : 	}

	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN3@Right:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 524  : 		return pStringMgr ? pStringMgr->Clone() : NULL;

	test	ecx, ecx
	je	SHORT $LN79@Right
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+16]
	mov	edx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1434 : 		if(pStringMgr) { return pStringMgr; }

	test	edx, edx
	jne	SHORT $LN38@Right
$LN79@Right:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxstr.h

; 52   : 		return( AfxGetStringManager() );

	call	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1437 : 		return pStringMgr->Clone();

	mov	ecx, eax
	mov	edx, DWORD PTR [eax]
	call	DWORD PTR [edx+16]
	mov	edx, eax
$LN38@Right:

; 2142 : 		return( CStringT( this->GetString()+nLength-nCount, nCount, GetManager() ) );

	mov	ecx, DWORD PTR _this$1$[ebp]
	sub	ebx, esi
	mov	ecx, DWORD PTR [ecx]
	lea	ebx, DWORD PTR [ecx+ebx*2]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 245  : 		ATLENSURE( pStringMgr != NULL );

	test	edx, edx
	je	SHORT $LN83@Right

; 246  : 
; 247  : 		if(pchSrc == NULL && nLength != 0)

	test	ebx, ebx
	jne	SHORT $LN62@Right
	test	esi, esi
	jne	SHORT $LN71@Right
$LN62@Right:

; 248  : 			AtlThrow(E_INVALIDARG);
; 249  : 
; 250  : 		CStringData* pData = pStringMgr->Allocate( nLength, sizeof( XCHAR ) );

	mov	eax, DWORD PTR [edx]
	mov	ecx, edx
	push	2
	push	esi
	call	DWORD PTR [eax]

; 251  : 		if( pData == NULL )

	test	eax, eax
	je	SHORT $LN80@Right

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]

; 59   : 		return (this+1);

	add	eax, 16					; 00000010H

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	DWORD PTR [edi], eax

; 871  : 		if( nLength < 0 || nLength > GetData()->nAllocLength)

	test	esi, esi
	js	SHORT $LN71@Right
	cmp	esi, DWORD PTR [eax-8]
	jg	SHORT $LN71@Right

; 873  : 
; 874  : 		GetData()->nDataLength = nLength;

	mov	DWORD PTR [eax-12], esi

; 875  : 		m_pszData[nLength] = 0;

	xor	eax, eax
	mov	ecx, DWORD PTR [edi]

; 257  : 		CopyChars( m_pszData, nLength, pchSrc, nLength );

	push	esi
	push	ebx
	push	esi

; 875  : 		m_pszData[nLength] = 0;

	mov	WORD PTR [ecx+esi*2], ax

; 257  : 		CopyChars( m_pszData, nLength, pchSrc, nLength );

	push	DWORD PTR [edi]
	call	?CopyChars@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::CopyChars
	add	esp, 16					; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 2142 : 		return( CStringT( this->GetString()+nLength-nCount, nCount, GetManager() ) );

	mov	eax, edi
	pop	edi

; 2143 : 	}

	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN71@Right:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 872  : 			AtlThrow(E_INVALIDARG);

	push	-2147024809				; 80070057H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN83@Right:

; 245  : 		ATLENSURE( pStringMgr != NULL );

	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN80@Right:

; 252  : 		{
; 253  : 			ThrowMemoryException();

	call	?ThrowMemoryException@?$CSimpleStringT@_W$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<wchar_t,0>::ThrowMemoryException
$LN81@Right:
	int	3
?Right@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBE?AV12@H@Z ENDP ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::Right
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
;	COMDAT ?ReverseFind@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBEH_W@Z
_TEXT	SEGMENT
_ch$ = 8						; size = 2
?ReverseFind@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBEH_W@Z PROC ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::ReverseFind, COMDAT
; _this$ = ecx

; 1809 : 	{

	push	ebp
	mov	ebp, esp
	push	esi

; 613  : 		return wcsrchr( psz, ch );

	push	DWORD PTR _ch$[ebp]

; 1809 : 	{

	mov	esi, ecx

; 613  : 		return wcsrchr( psz, ch );

	push	DWORD PTR [esi]
	call	_wcsrchr
	add	esp, 8

; 1810 : 		// find last single character
; 1811 : 		PCXSTR psz = StringTraits::StringFindCharRev( this->GetString(), ch );
; 1812 : 
; 1813 : 		// return -1 if not found, distance from beginning otherwise
; 1814 : 		return( (psz == NULL) ? -1 : int( psz - this->GetString() ) );

	test	eax, eax
	jne	SHORT $LN3@ReverseFin
	or	eax, -1
	pop	esi

; 1815 : 	}

	pop	ebp
	ret	4
$LN3@ReverseFin:

; 1810 : 		// find last single character
; 1811 : 		PCXSTR psz = StringTraits::StringFindCharRev( this->GetString(), ch );
; 1812 : 
; 1813 : 		// return -1 if not found, distance from beginning otherwise
; 1814 : 		return( (psz == NULL) ? -1 : int( psz - this->GetString() ) );

	sub	eax, DWORD PTR [esi]
	sar	eax, 1
	pop	esi

; 1815 : 	}

	pop	ebp
	ret	4
?ReverseFind@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBEH_W@Z ENDP ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::ReverseFind
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
;	COMDAT ?Find@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBEH_WH@Z
_TEXT	SEGMENT
_ch$ = 8						; size = 2
_iStart$ = 12						; size = 4
?Find@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBEH_WH@Z PROC ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::Find, COMDAT
; _this$ = ecx

; 1752 : 	{

	push	ebp
	mov	ebp, esp

; 1758 : 		if( iStart < 0 || iStart >= nLength)

	mov	eax, DWORD PTR _iStart$[ebp]
	push	esi
	mov	esi, ecx
	test	eax, eax
	js	SHORT $LN3@Find
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

	mov	ecx, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1758 : 		if( iStart < 0 || iStart >= nLength)

	cmp	eax, DWORD PTR [ecx-12]
	jge	SHORT $LN3@Find

; 606  : 		return wcschr( pszBlock, chMatch );

	push	DWORD PTR _ch$[ebp]

; 1759 : 		{
; 1760 : 			return( -1 );
; 1761 : 		}
; 1762 : 
; 1763 : 		// find first single character
; 1764 : 		PCXSTR psz = StringTraits::StringFindChar( this->GetString()+iStart, ch );

	lea	eax, DWORD PTR [ecx+eax*2]

; 606  : 		return wcschr( pszBlock, chMatch );

	push	eax
	call	_wcschr
	add	esp, 8

; 1765 : 
; 1766 : 		// return -1 if not found and index otherwise
; 1767 : 		return( (psz == NULL) ? -1 : int( psz - this->GetString() ) );

	test	eax, eax
	je	SHORT $LN3@Find
	sub	eax, DWORD PTR [esi]
	sar	eax, 1
	pop	esi

; 1768 : 	}

	pop	ebp
	ret	8
$LN3@Find:
	or	eax, -1
	pop	esi
	pop	ebp
	ret	8
?Find@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBEH_WH@Z ENDP ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::Find
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
;	COMDAT ?GetBuffer@?$CSimpleStringT@_W$0A@@ATL@@QAEPA_WXZ
_TEXT	SEGMENT
?GetBuffer@?$CSimpleStringT@_W$0A@@ATL@@QAEPA_WXZ PROC	; ATL::CSimpleStringT<wchar_t,0>::GetBuffer, COMDAT
; _this$ = ecx

; 497  : 	{

	push	esi
	mov	esi, ecx

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	eax, DWORD PTR [esi]

; 73   : 		return( nRefs > 1 );

	cmp	DWORD PTR [eax-4], 1

; 498  : 		CStringData* pData = GetData();
; 499  : 		if( pData->IsShared() )

	jle	SHORT $LN2@GetBuffer

; 500  : 		{
; 501  : 			Fork( pData->nDataLength );

	push	DWORD PTR [eax-12]
	call	?Fork@?$CSimpleStringT@_W$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<wchar_t,0>::Fork

; 502  : 		}
; 503  : 
; 504  : 		return( m_pszData );

	mov	eax, DWORD PTR [esi]
$LN2@GetBuffer:

; 505  : 	}

	pop	esi
	ret	0
?GetBuffer@?$CSimpleStringT@_W$0A@@ATL@@QAEPA_WXZ ENDP	; ATL::CSimpleStringT<wchar_t,0>::GetBuffer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
;	COMDAT ?StringFindChar@?$ChTraitsCRT@_W@ATL@@SAPB_WPB_W_W@Z
_TEXT	SEGMENT
_pszBlock$ = 8						; size = 4
_chMatch$ = 12						; size = 2
?StringFindChar@?$ChTraitsCRT@_W@ATL@@SAPB_WPB_W_W@Z PROC ; ATL::ChTraitsCRT<wchar_t>::StringFindChar, COMDAT

; 605  : 	{

	push	ebp
	mov	ebp, esp

; 607  : 	}

	pop	ebp

; 606  : 		return wcschr( pszBlock, chMatch );

	jmp	_wcschr
?StringFindChar@?$ChTraitsCRT@_W@ATL@@SAPB_WPB_W_W@Z ENDP ; ATL::ChTraitsCRT<wchar_t>::StringFindChar
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
;	COMDAT ?StringFindCharRev@?$ChTraitsCRT@_W@ATL@@SAPB_WPB_W_W@Z
_TEXT	SEGMENT
_psz$ = 8						; size = 4
_ch$ = 12						; size = 2
?StringFindCharRev@?$ChTraitsCRT@_W@ATL@@SAPB_WPB_W_W@Z PROC ; ATL::ChTraitsCRT<wchar_t>::StringFindCharRev, COMDAT

; 612  : 	{

	push	ebp
	mov	ebp, esp

; 614  : 	}

	pop	ebp

; 613  : 		return wcsrchr( psz, ch );

	jmp	_wcsrchr
?StringFindCharRev@?$ChTraitsCRT@_W@ATL@@SAPB_WPB_W_W@Z ENDP ; ATL::ChTraitsCRT<wchar_t>::StringFindCharRev
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\shared\winerror.h
;	COMDAT _HRESULT_FROM_WIN32
_TEXT	SEGMENT
_x$ = 8							; size = 4
_HRESULT_FROM_WIN32 PROC				; COMDAT

; 28857: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _x$[ebp]
	test	eax, eax
	jle	SHORT $LN4@HRESULT_FR
	movzx	eax, ax
	or	eax, -2147024896			; 80070000H
$LN4@HRESULT_FR:
	pop	ebp
	ret	0
_HRESULT_FROM_WIN32 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlAdd@H@ATL@@YAJPAHHH@Z
_TEXT	SEGMENT
_ptResult$ = 8						; size = 4
_tLeft$ = 12						; size = 4
_tRight$ = 16						; size = 4
??$AtlAdd@H@ATL@@YAJPAHHH@Z PROC			; ATL::AtlAdd<int>, COMDAT

; 84   : {

	push	ebp
	mov	ebp, esp

; 85   : 	if(::ATL::AtlLimits<T>::_Max-tLeft < tRight)

	mov	ecx, DWORD PTR _tLeft$[ebp]
	mov	eax, 2147483647				; 7fffffffH
	mov	edx, DWORD PTR _tRight$[ebp]
	sub	eax, ecx
	cmp	eax, edx
	jge	SHORT $LN2@AtlAdd

; 86   : 	{
; 87   : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

	mov	eax, -2147024362			; 80070216H

; 91   : }

	pop	ebp
	ret	0
$LN2@AtlAdd:

; 88   : 	}
; 89   : 	*ptResult= tLeft + tRight;

	mov	eax, DWORD PTR _ptResult$[ebp]
	add	ecx, edx
	mov	DWORD PTR [eax], ecx

; 90   : 	return S_OK;

	xor	eax, eax

; 91   : }

	pop	ebp
	ret	0
??$AtlAdd@H@ATL@@YAJPAHHH@Z ENDP			; ATL::AtlAdd<int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlAddThrow@H@ATL@@YAHHH@Z
_TEXT	SEGMENT
_tLeft$ = 8						; size = 4
_tRight$ = 12						; size = 4
??$AtlAddThrow@H@ATL@@YAHHH@Z PROC			; ATL::AtlAddThrow<int>, COMDAT

; 193  : {

	push	ebp
	mov	ebp, esp

; 85   : 	if(::ATL::AtlLimits<T>::_Max-tLeft < tRight)

	mov	ecx, DWORD PTR _tLeft$[ebp]
	mov	eax, 2147483647				; 7fffffffH
	mov	edx, DWORD PTR _tRight$[ebp]
	sub	eax, ecx
	cmp	eax, edx
	jl	SHORT $LN11@AtlAddThro

; 86   : 	{
; 87   : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);
; 88   : 	}
; 89   : 	*ptResult= tLeft + tRight;

	lea	eax, DWORD PTR [ecx+edx]

; 199  : 	}
; 200  : 	return tResult;
; 201  : }

	pop	ebp
	ret	0
$LN11@AtlAddThro:

; 194  : 	T tResult;
; 195  : 	HRESULT hr=AtlAdd(&tResult, tLeft, tRight);
; 196  : 	if(FAILED(hr))
; 197  : 	{
; 198  : 		AtlThrow(hr);

	push	-2147024362				; 80070216H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN12@AtlAddThro:
	int	3
??$AtlAddThrow@H@ATL@@YAHHH@Z ENDP			; ATL::AtlAddThrow<int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
;	COMDAT ??0?$CSimpleStringT@_W$0A@@ATL@@QAE@PB_WHPAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT
_pchSrc$ = 8						; size = 4
_nLength$ = 12						; size = 4
_pStringMgr$ = 16					; size = 4
??0?$CSimpleStringT@_W$0A@@ATL@@QAE@PB_WHPAUIAtlStringMgr@1@@Z PROC ; ATL::CSimpleStringT<wchar_t,0>::CSimpleStringT<wchar_t,0>, COMDAT
; _this$ = ecx

; 240  : 	CSimpleStringT(

	push	ebp
	mov	ebp, esp
	push	esi
	push	edi
	mov	edi, ecx

; 241  : 		_In_reads_(nLength) const XCHAR* pchSrc,
; 242  : 		_In_ int nLength,
; 243  : 		_Inout_ IAtlStringMgr* pStringMgr)
; 244  : 	{
; 245  : 		ATLENSURE( pStringMgr != NULL );

	mov	ecx, DWORD PTR _pStringMgr$[ebp]
	test	ecx, ecx
	je	SHORT $LN27@CSimpleStr

; 246  : 
; 247  : 		if(pchSrc == NULL && nLength != 0)

	cmp	DWORD PTR _pchSrc$[ebp], 0
	mov	esi, DWORD PTR _nLength$[ebp]
	jne	SHORT $LN9@CSimpleStr
	test	esi, esi
	jne	SHORT $LN18@CSimpleStr
$LN9@CSimpleStr:

; 248  : 			AtlThrow(E_INVALIDARG);
; 249  : 
; 250  : 		CStringData* pData = pStringMgr->Allocate( nLength, sizeof( XCHAR ) );

	mov	eax, DWORD PTR [ecx]
	push	2
	push	esi
	call	DWORD PTR [eax]

; 251  : 		if( pData == NULL )

	test	eax, eax
	je	SHORT $LN28@CSimpleStr

; 59   : 		return (this+1);

	add	eax, 16					; 00000010H

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	DWORD PTR [edi], eax

; 871  : 		if( nLength < 0 || nLength > GetData()->nAllocLength)

	test	esi, esi
	js	SHORT $LN18@CSimpleStr
	cmp	esi, DWORD PTR [eax-8]
	jg	SHORT $LN18@CSimpleStr

; 873  : 
; 874  : 		GetData()->nDataLength = nLength;

	mov	DWORD PTR [eax-12], esi

; 875  : 		m_pszData[nLength] = 0;

	xor	ecx, ecx
	mov	eax, DWORD PTR [edi]

; 254  : 		}
; 255  : 		Attach( pData );
; 256  : 		SetLength( nLength );
; 257  : 		CopyChars( m_pszData, nLength, pchSrc, nLength );

	push	esi
	push	DWORD PTR _pchSrc$[ebp]

; 875  : 		m_pszData[nLength] = 0;

	mov	WORD PTR [eax+esi*2], cx

; 254  : 		}
; 255  : 		Attach( pData );
; 256  : 		SetLength( nLength );
; 257  : 		CopyChars( m_pszData, nLength, pchSrc, nLength );

	push	esi
	push	DWORD PTR [edi]
	call	?CopyChars@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::CopyChars
	add	esp, 16					; 00000010H

; 258  : 	}

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	ret	12					; 0000000cH
$LN18@CSimpleStr:

; 872  : 			AtlThrow(E_INVALIDARG);

	push	-2147024809				; 80070057H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN27@CSimpleStr:

; 241  : 		_In_reads_(nLength) const XCHAR* pchSrc,
; 242  : 		_In_ int nLength,
; 243  : 		_Inout_ IAtlStringMgr* pStringMgr)
; 244  : 	{
; 245  : 		ATLENSURE( pStringMgr != NULL );

	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN28@CSimpleStr:

; 252  : 		{
; 253  : 			ThrowMemoryException();

	call	?ThrowMemoryException@?$CSimpleStringT@_W$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<wchar_t,0>::ThrowMemoryException
$LN25@CSimpleStr:
	int	3
??0?$CSimpleStringT@_W$0A@@ATL@@QAE@PB_WHPAUIAtlStringMgr@1@@Z ENDP ; ATL::CSimpleStringT<wchar_t,0>::CSimpleStringT<wchar_t,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
;	COMDAT ??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_WHPAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pch$ = 8						; size = 4
_nLength$ = 12						; size = 4
_pStringMgr$ = 16					; size = 4
??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_WHPAUIAtlStringMgr@1@@Z PROC ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >, COMDAT
; _this$ = ecx

; 1248 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
	mov	edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 245  : 		ATLENSURE( pStringMgr != NULL );

	mov	ecx, DWORD PTR _pStringMgr$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1248 : 	{

	mov	DWORD PTR _this$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 245  : 		ATLENSURE( pStringMgr != NULL );

	test	ecx, ecx
	je	SHORT $LN31@CStringT

; 246  : 
; 247  : 		if(pchSrc == NULL && nLength != 0)

	cmp	DWORD PTR _pch$[ebp], 0
	mov	esi, DWORD PTR _nLength$[ebp]
	jne	SHORT $LN12@CStringT
	test	esi, esi
	jne	SHORT $LN21@CStringT
$LN12@CStringT:

; 248  : 			AtlThrow(E_INVALIDARG);
; 249  : 
; 250  : 		CStringData* pData = pStringMgr->Allocate( nLength, sizeof( XCHAR ) );

	mov	eax, DWORD PTR [ecx]
	push	2
	push	esi
	call	DWORD PTR [eax]

; 251  : 		if( pData == NULL )

	test	eax, eax
	je	SHORT $LN32@CStringT

; 59   : 		return (this+1);

	add	eax, 16					; 00000010H

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	DWORD PTR [edi], eax

; 871  : 		if( nLength < 0 || nLength > GetData()->nAllocLength)

	test	esi, esi
	js	SHORT $LN21@CStringT
	cmp	esi, DWORD PTR [eax-8]
	jg	SHORT $LN21@CStringT

; 873  : 
; 874  : 		GetData()->nDataLength = nLength;

	mov	DWORD PTR [eax-12], esi

; 875  : 		m_pszData[nLength] = 0;

	xor	ecx, ecx
	mov	eax, DWORD PTR [edi]

; 257  : 		CopyChars( m_pszData, nLength, pchSrc, nLength );

	push	esi
	push	DWORD PTR _pch$[ebp]

; 875  : 		m_pszData[nLength] = 0;

	mov	WORD PTR [eax+esi*2], cx

; 257  : 		CopyChars( m_pszData, nLength, pchSrc, nLength );

	push	esi
	push	DWORD PTR [edi]
	call	?CopyChars@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::CopyChars
	add	esp, 16					; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1249 : 	}

	mov	eax, edi
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN21@CStringT:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 872  : 			AtlThrow(E_INVALIDARG);

	push	-2147024809				; 80070057H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN31@CStringT:

; 245  : 		ATLENSURE( pStringMgr != NULL );

	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN32@CStringT:

; 252  : 		{
; 253  : 			ThrowMemoryException();

	call	?ThrowMemoryException@?$CSimpleStringT@_W$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<wchar_t,0>::ThrowMemoryException
$LN29@CStringT:
	int	3
??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_WHPAUIAtlStringMgr@1@@Z ENDP ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
;	COMDAT ?Mid@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBE?AV12@HH@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_iFirst$ = 12						; size = 4
_nCount$ = 16						; size = 4
?Mid@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBE?AV12@HH@Z PROC ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::Mid, COMDAT
; _this$ = ecx

; 2100 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx

; 2101 : 		// nCount is in XCHARs
; 2102 : 
; 2103 : 		// out-of-bounds requests return sensible things
; 2104 : 		if (iFirst < 0)
; 2105 : 			iFirst = 0;
; 2106 : 		if (nCount < 0)

	mov	eax, DWORD PTR _iFirst$[ebp]
	push	ebx
	push	esi
	push	edi
	xor	edi, edi
	mov	DWORD PTR _this$1$[ebp], ecx
	test	eax, eax
	cmovns	edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h

; 85   : 	if(::ATL::AtlLimits<T>::_Max-tLeft < tRight)

	mov	eax, DWORD PTR _nCount$[ebp]
	xor	edx, edx
	test	eax, eax
	cmovns	edx, eax
	mov	eax, 2147483647				; 7fffffffH
	sub	eax, edi
	cmp	eax, edx
	jl	$LN104@Mid
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

	mov	ebx, DWORD PTR [ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h

; 89   : 	*ptResult= tLeft + tRight;

	lea	eax, DWORD PTR [edx+edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 519  : 		return( GetData()->nDataLength );

	mov	ecx, DWORD PTR [ebx-12]
	sub	ecx, edi
	cmp	eax, DWORD PTR [ebx-12]
	cmovle	ecx, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 2121 : 		if( (iFirst == 0) && ((iFirst+nCount) == this->GetLength()) )

	mov	edx, DWORD PTR [ebx-12]
	xor	esi, esi
	cmp	edi, edx
	cmovle	esi, ecx
	test	edi, edi
	jne	SHORT $LN6@Mid
	lea	eax, DWORD PTR [esi+edi]
	cmp	eax, edx
	jne	SHORT $LN6@Mid
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 882  : 		IAtlStringMgr* pNewStringMgr = pData->pStringMgr->Clone();

	mov	ecx, DWORD PTR [ebx-16]

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	lea	esi, DWORD PTR [ebx-16]

; 882  : 		IAtlStringMgr* pNewStringMgr = pData->pStringMgr->Clone();

	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+16]

; 69   : 		return nRefs < 0;

	cmp	DWORD PTR [esi+12], edi

; 882  : 		IAtlStringMgr* pNewStringMgr = pData->pStringMgr->Clone();

	mov	ecx, eax

; 69   : 		return nRefs < 0;

	lea	eax, DWORD PTR [esi+12]

; 883  : 		if( !pData->IsLocked() && (pNewStringMgr == pData->pStringMgr) )

	jl	SHORT $LN45@Mid
	cmp	ecx, DWORD PTR [esi]
	jne	SHORT $LN45@Mid

; 65   : 		_InterlockedIncrement(&nRefs);

	lock	 inc	 DWORD PTR [eax]

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 59   : 		return (this+1);

	lea	ecx, DWORD PTR [esi+16]
	pop	edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 2127 : 	}

	pop	esi
	pop	ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	DWORD PTR [eax], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 2127 : 	}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN45@Mid:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 890  : 			pNewData = pNewStringMgr->Allocate( pData->nDataLength, sizeof( XCHAR ) );

	mov	eax, DWORD PTR [ecx]
	lea	edi, DWORD PTR [esi+4]
	push	2
	push	DWORD PTR [edi]
	call	DWORD PTR [eax]
	mov	esi, eax

; 891  : 			if( pNewData == NULL )

	test	esi, esi
	je	$LN106@Mid

; 892  : 			{
; 893  : 				ThrowMemoryException();
; 894  : 			}
; 895  : 			pNewData->nDataLength = pData->nDataLength;

	mov	ecx, DWORD PTR [edi]

; 59   : 		return (this+1);

	lea	eax, DWORD PTR [esi+16]

; 895  : 			pNewData->nDataLength = pData->nDataLength;

	mov	DWORD PTR [esi+4], ecx

; 896  : 			CopyChars( PXSTR( pNewData->data() ), pData->nDataLength+1,

	mov	ecx, DWORD PTR [edi]
	inc	ecx
	push	ecx
	push	ebx
	push	ecx
	push	eax
	call	?CopyChars@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::CopyChars

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 59   : 		return (this+1);

	lea	ecx, DWORD PTR [esi+16]

; 896  : 			CopyChars( PXSTR( pNewData->data() ), pData->nDataLength+1,

	add	esp, 16					; 00000010H

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	DWORD PTR [eax], ecx
	pop	edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 2127 : 	}

	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN6@Mid:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 523  : 		IAtlStringMgr* pStringMgr = GetData()->pStringMgr;

	mov	ecx, DWORD PTR [ebx-16]

; 524  : 		return pStringMgr ? pStringMgr->Clone() : NULL;

	test	ecx, ecx
	je	SHORT $LN105@Mid
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+16]
	mov	edx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1434 : 		if(pStringMgr) { return pStringMgr; }

	test	edx, edx
	jne	SHORT $LN63@Mid
$LN105@Mid:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxstr.h

; 52   : 		return( AfxGetStringManager() );

	call	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1437 : 		return pStringMgr->Clone();

	mov	ecx, eax
	mov	edx, DWORD PTR [eax]
	call	DWORD PTR [edx+16]
	mov	edx, eax
$LN63@Mid:

; 2126 : 		return( CStringT( this->GetString()+iFirst, nCount, GetManager() ) );

	mov	ecx, DWORD PTR _this$1$[ebp]
	mov	ecx, DWORD PTR [ecx]
	lea	ebx, DWORD PTR [ecx+edi*2]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 245  : 		ATLENSURE( pStringMgr != NULL );

	test	edx, edx
	je	SHORT $LN109@Mid

; 246  : 
; 247  : 		if(pchSrc == NULL && nLength != 0)

	test	ebx, ebx
	jne	SHORT $LN87@Mid
	test	esi, esi
	jne	SHORT $LN96@Mid
$LN87@Mid:

; 248  : 			AtlThrow(E_INVALIDARG);
; 249  : 
; 250  : 		CStringData* pData = pStringMgr->Allocate( nLength, sizeof( XCHAR ) );

	mov	eax, DWORD PTR [edx]
	mov	ecx, edx
	push	2
	push	esi
	call	DWORD PTR [eax]

; 251  : 		if( pData == NULL )

	test	eax, eax
	je	SHORT $LN106@Mid

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]

; 59   : 		return (this+1);

	add	eax, 16					; 00000010H

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	DWORD PTR [edi], eax

; 871  : 		if( nLength < 0 || nLength > GetData()->nAllocLength)

	test	esi, esi
	js	SHORT $LN96@Mid
	cmp	esi, DWORD PTR [eax-8]
	jg	SHORT $LN96@Mid

; 873  : 
; 874  : 		GetData()->nDataLength = nLength;

	mov	DWORD PTR [eax-12], esi

; 875  : 		m_pszData[nLength] = 0;

	xor	eax, eax
	mov	ecx, DWORD PTR [edi]

; 257  : 		CopyChars( m_pszData, nLength, pchSrc, nLength );

	push	esi
	push	ebx
	push	esi

; 875  : 		m_pszData[nLength] = 0;

	mov	WORD PTR [ecx+esi*2], ax

; 257  : 		CopyChars( m_pszData, nLength, pchSrc, nLength );

	push	DWORD PTR [edi]
	call	?CopyChars@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::CopyChars
	add	esp, 16					; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 2126 : 		return( CStringT( this->GetString()+iFirst, nCount, GetManager() ) );

	mov	eax, edi
	pop	edi

; 2127 : 	}

	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN104@Mid:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h

; 198  : 		AtlThrow(hr);

	push	-2147024362				; 80070216H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN109@Mid:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 245  : 		ATLENSURE( pStringMgr != NULL );

	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN106@Mid:

; 252  : 		{
; 253  : 			ThrowMemoryException();

	call	?ThrowMemoryException@?$CSimpleStringT@_W$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<wchar_t,0>::ThrowMemoryException
$LN96@Mid:

; 872  : 			AtlThrow(E_INVALIDARG);

	push	-2147024809				; 80070057H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN107@Mid:
	int	3
?Mid@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBE?AV12@HH@Z ENDP ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::Mid
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxcoll.inl
;	COMDAT ?GetAt@CStringArray@@QBEABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@H@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
?GetAt@CStringArray@@QBEABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@H@Z PROC ; CStringArray::GetAt, COMDAT
; _this$ = ecx

; 288  : 	{ ASSERT(nIndex >= 0 && nIndex < m_nSize);

	push	ebp
	mov	ebp, esp

; 289  : 		if( nIndex < 0 || nIndex >= m_nSize )

	mov	edx, DWORD PTR _nIndex$[ebp]
	test	edx, edx
	js	SHORT $LN3@GetAt
	cmp	edx, DWORD PTR [ecx+8]
	jge	SHORT $LN3@GetAt

; 291  : 		return m_pData[nIndex]; }

	mov	eax, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [eax+edx*4]
	pop	ebp
	ret	4
$LN3@GetAt:

; 290  : 			AfxThrowInvalidArgException();

	call	?AfxThrowInvalidArgException@@YGXXZ	; AfxThrowInvalidArgException
$LN5@GetAt:
	int	3
?GetAt@CStringArray@@QBEABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@H@Z ENDP ; CStringArray::GetAt
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
;	COMDAT ??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT
_pStringMgr$ = 8					; size = 4
??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z PROC ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >, COMDAT
; _this$ = ecx

; 1012 : 	{

	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 205  : 		ATLENSURE( pStringMgr != NULL );

	mov	ecx, DWORD PTR _pStringMgr$[ebp]
	test	ecx, ecx
	je	SHORT $LN19@CStringT

; 206  : 		CStringData* pData = pStringMgr->GetNilString();

	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+12]

; 59   : 		return (this+1);

	add	eax, 16					; 00000010H

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	DWORD PTR [esi], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1013 : 	}

	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
$LN19@CStringT:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 205  : 		ATLENSURE( pStringMgr != NULL );

	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN17@CStringT:
	int	3
??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ENDP ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
;	COMDAT ?GetManager@?$CSimpleStringT@_W$0A@@ATL@@QBEPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT
?GetManager@?$CSimpleStringT@_W$0A@@ATL@@QBEPAUIAtlStringMgr@2@XZ PROC ; ATL::CSimpleStringT<wchar_t,0>::GetManager, COMDAT
; _this$ = ecx

; 523  : 		IAtlStringMgr* pStringMgr = GetData()->pStringMgr;

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [eax-16]

; 524  : 		return pStringMgr ? pStringMgr->Clone() : NULL;

	test	ecx, ecx
	je	SHORT $LN3@GetManager
	mov	eax, DWORD PTR [ecx]
	jmp	DWORD PTR [eax+16]
$LN3@GetManager:
	xor	eax, eax

; 525  : 	}

	ret	0
?GetManager@?$CSimpleStringT@_W$0A@@ATL@@QBEPAUIAtlStringMgr@2@XZ ENDP ; ATL::CSimpleStringT<wchar_t,0>::GetManager
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
;	COMDAT ?GetManager@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBEPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT
?GetManager@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBEPAUIAtlStringMgr@2@XZ PROC ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::GetManager, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 523  : 		IAtlStringMgr* pStringMgr = GetData()->pStringMgr;

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [eax-16]

; 524  : 		return pStringMgr ? pStringMgr->Clone() : NULL;

	test	ecx, ecx
	je	SHORT $LN2@GetManager
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1434 : 		if(pStringMgr) { return pStringMgr; }

	test	eax, eax
	jne	SHORT $LN1@GetManager
$LN2@GetManager:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxstr.h

; 52   : 		return( AfxGetStringManager() );

	call	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1437 : 		return pStringMgr->Clone();

	mov	ecx, eax
	mov	edx, DWORD PTR [eax]
	jmp	DWORD PTR [edx+16]
$LN1@GetManager:

; 1438 : 	}

	ret	0
?GetManager@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBEPAUIAtlStringMgr@2@XZ ENDP ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::GetManager
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
;	COMDAT ?Concatenate@?$CSimpleStringT@_W$0A@@ATL@@KAXAAV12@PB_WH1H@Z
_TEXT	SEGMENT
_strResult$ = 8						; size = 4
_psz1$ = 12						; size = 4
_nLength1$ = 16						; size = 4
_psz2$ = 20						; size = 4
_nLength2$ = 24						; size = 4
?Concatenate@?$CSimpleStringT@_W$0A@@ATL@@KAXAAV12@PB_WH1H@Z PROC ; ATL::CSimpleStringT<wchar_t,0>::Concatenate, COMDAT

; 764  : 	{

	push	ebp
	mov	ebp, esp
	push	esi

; 765  : 		int nNewLength = nLength1+nLength2;

	mov	esi, DWORD PTR _nLength1$[ebp]
	add	esi, DWORD PTR _nLength2$[ebp]
	push	edi

; 804  : 		if (nLength < 0)

	js	SHORT $LN17@Concatenat

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	edi, DWORD PTR _strResult$[ebp]

; 808  : 		int nShared = 1-pOldData->nRefs;  // nShared < 0 means true, >= 0 means false

	mov	ecx, 1

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	push	ebx
	mov	ebx, DWORD PTR [edi]

; 809  : 		int nTooShort = pOldData->nAllocLength-nLength;  // nTooShort < 0 means true, >= 0 means false

	mov	eax, DWORD PTR [ebx-8]
	sub	ecx, DWORD PTR [ebx-4]
	sub	eax, esi

; 810  : 		if( (nShared|nTooShort) < 0 )  // If either sign bit is set (i.e. either is less than zero), we need to copy data

	or	ecx, eax
	jge	SHORT $LN7@Concatenat

; 811  : 		{
; 812  : 			PrepareWrite2( nLength );

	push	esi
	mov	ecx, edi
	call	?PrepareWrite2@?$CSimpleStringT@_W$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<wchar_t,0>::PrepareWrite2
	mov	ebx, DWORD PTR [edi]
$LN7@Concatenat:

; 766  : 		PXSTR pszBuffer = strResult.GetBuffer( nNewLength );
; 767  : 		CopyChars( pszBuffer, nLength1, psz1, nLength1 );

	mov	eax, DWORD PTR _nLength1$[ebp]
	push	eax
	push	DWORD PTR _psz1$[ebp]
	push	eax
	push	ebx
	call	?CopyChars@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::CopyChars

; 768  : 		CopyChars( pszBuffer+nLength1, nLength2, psz2, nLength2 );

	mov	eax, DWORD PTR _nLength2$[ebp]
	push	eax
	push	DWORD PTR _psz2$[ebp]
	push	eax
	mov	eax, DWORD PTR _nLength1$[ebp]
	lea	eax, DWORD PTR [ebx+eax*2]
	push	eax
	call	?CopyChars@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::CopyChars

; 871  : 		if( nLength < 0 || nLength > GetData()->nAllocLength)

	mov	eax, DWORD PTR [edi]

; 768  : 		CopyChars( pszBuffer+nLength1, nLength2, psz2, nLength2 );

	add	esp, 32					; 00000020H

; 871  : 		if( nLength < 0 || nLength > GetData()->nAllocLength)

	pop	ebx
	cmp	esi, DWORD PTR [eax-8]
	jg	SHORT $LN17@Concatenat

; 873  : 
; 874  : 		GetData()->nDataLength = nLength;

	mov	DWORD PTR [eax-12], esi

; 875  : 		m_pszData[nLength] = 0;

	xor	ecx, ecx
	mov	eax, DWORD PTR [edi]
	pop	edi
	mov	WORD PTR [eax+esi*2], cx
	pop	esi

; 769  : 		strResult.ReleaseBufferSetLength( nNewLength );
; 770  : 	}

	pop	ebp
	ret	0
$LN17@Concatenat:

; 872  : 			AtlThrow(E_INVALIDARG);

	push	-2147024809				; 80070057H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN24@Concatenat:
	int	3
?Concatenate@?$CSimpleStringT@_W$0A@@ATL@@KAXAAV12@PB_WH1H@Z ENDP ; ATL::CSimpleStringT<wchar_t,0>::Concatenate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
;	COMDAT ??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@PB_W@Z
_TEXT	SEGMENT
$T8 = -24						; size = 4
tv359 = -20						; size = 4
$T1 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
$T9 = 12						; size = 4
_str1$ = 12						; size = 4
_psz2$ = 16						; size = 4
??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@PB_W@Z PROC ; ATL::operator+, COMDAT

; 2394 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@PB_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 523  : 		IAtlStringMgr* pStringMgr = GetData()->pStringMgr;

	mov	esi, DWORD PTR _str1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 2394 : 	{

	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR $T1[ebp], 0
	mov	ebx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [ebx], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 523  : 		IAtlStringMgr* pStringMgr = GetData()->pStringMgr;

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax-16]

; 524  : 		return pStringMgr ? pStringMgr->Clone() : NULL;

	test	ecx, ecx
	je	SHORT $LN67@operator
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+16]
	mov	ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1434 : 		if(pStringMgr) { return pStringMgr; }

	test	ecx, ecx
	jne	SHORT $LN21@operator
$LN67@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxstr.h

; 52   : 		return( AfxGetStringManager() );

	call	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1437 : 		return pStringMgr->Clone();

	mov	ecx, eax
	mov	edx, DWORD PTR [eax]
	call	DWORD PTR [edx+16]
	mov	ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 205  : 		ATLENSURE( pStringMgr != NULL );

	test	ecx, ecx
	je	$LN73@operator
$LN21@operator:

; 206  : 		CStringData* pData = pStringMgr->GetNilString();

	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+12]

; 59   : 		return (this+1);

	add	eax, 16					; 00000010H
	mov	DWORD PTR tv359[ebp], eax

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	DWORD PTR [ebx], eax

; 730  : 		if( psz == NULL )

	mov	eax, DWORD PTR _psz2$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 2399 : 		return( strResult );

	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR $T1[ebp], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 730  : 		if( psz == NULL )

	test	eax, eax
	jne	SHORT $LN36@operator

; 731  : 		{
; 732  : 			return( 0 );

	xor	edi, edi
	jmp	SHORT $LN35@operator
$LN36@operator:

; 733  : 		}
; 734  : 		return( int( wcslen( psz ) ) );

	mov	edi, eax
	lea	ecx, DWORD PTR [edi+2]
$LL68@operator:
	mov	ax, WORD PTR [edi]
	add	edi, 2
	test	ax, ax
	jne	SHORT $LL68@operator
	sub	edi, ecx
	sar	edi, 1
$LN35@operator:

; 519  : 		return( GetData()->nDataLength );

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR $T8[ebp], eax
	mov	eax, DWORD PTR [eax-12]
	mov	DWORD PTR $T9[ebp], eax

; 765  : 		int nNewLength = nLength1+nLength2;

	lea	edx, DWORD PTR [edi+eax]

; 804  : 		if (nLength < 0)

	test	edx, edx
	js	SHORT $LN60@operator

; 805  : 			AtlThrow(E_INVALIDARG);
; 806  : 
; 807  : 		CStringData* pOldData = GetData();
; 808  : 		int nShared = 1-pOldData->nRefs;  // nShared < 0 means true, >= 0 means false

	mov	eax, DWORD PTR tv359[ebp]
	mov	ecx, 1
	sub	ecx, DWORD PTR [eax-4]

; 809  : 		int nTooShort = pOldData->nAllocLength-nLength;  // nTooShort < 0 means true, >= 0 means false

	mov	eax, DWORD PTR [eax-8]
	sub	eax, edx

; 810  : 		if( (nShared|nTooShort) < 0 )  // If either sign bit is set (i.e. either is less than zero), we need to copy data

	or	ecx, eax
	jge	SHORT $LN50@operator

; 811  : 		{
; 812  : 			PrepareWrite2( nLength );

	push	edx
	mov	ecx, ebx
	call	?PrepareWrite2@?$CSimpleStringT@_W$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<wchar_t,0>::PrepareWrite2
$LN50@operator:

; 767  : 		CopyChars( pszBuffer, nLength1, psz1, nLength1 );

	mov	eax, DWORD PTR $T9[ebp]

; 508  : 		return( PrepareWrite( nMinBufferLength ) );

	mov	esi, DWORD PTR [ebx]

; 767  : 		CopyChars( pszBuffer, nLength1, psz1, nLength1 );

	push	eax
	push	DWORD PTR $T8[ebp]
	push	eax
	push	esi
	call	?CopyChars@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::CopyChars

; 768  : 		CopyChars( pszBuffer+nLength1, nLength2, psz2, nLength2 );

	mov	eax, DWORD PTR $T9[ebp]
	push	edi
	push	DWORD PTR _psz2$[ebp]
	lea	eax, DWORD PTR [esi+eax*2]
	push	edi
	push	eax
	call	?CopyChars@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::CopyChars

; 871  : 		if( nLength < 0 || nLength > GetData()->nAllocLength)

	mov	ecx, DWORD PTR [ebx]

; 768  : 		CopyChars( pszBuffer+nLength1, nLength2, psz2, nLength2 );

	add	esp, 32					; 00000020H

; 871  : 		if( nLength < 0 || nLength > GetData()->nAllocLength)

	mov	edx, DWORD PTR $T9[ebp]
	add	edx, edi
	cmp	edx, DWORD PTR [ecx-8]
	jg	SHORT $LN60@operator

; 873  : 
; 874  : 		GetData()->nDataLength = nLength;

	mov	DWORD PTR [ecx-12], edx

; 875  : 		m_pszData[nLength] = 0;

	xor	eax, eax
	mov	ecx, DWORD PTR [ebx]
	mov	WORD PTR [ecx+edx*2], ax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 2399 : 		return( strResult );

	mov	eax, ebx

; 2400 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN60@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 872  : 			AtlThrow(E_INVALIDARG);

	push	-2147024809				; 80070057H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN73@operator:

; 205  : 		ATLENSURE( pStringMgr != NULL );

	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN70@operator:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@PB_W@Z$0:
	mov	eax, DWORD PTR $T1[ebp]
	and	eax, 1
	je	$LN4@operator
	and	DWORD PTR $T1[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
$LN4@operator:
	ret	0
__ehhandler$??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@PB_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@PB_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@PB_W@Z ENDP ; ATL::operator+
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxcoll.inl
;	COMDAT ?Add@CStringArray@@QAEHABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
_newElement$ = 8					; size = 4
?Add@CStringArray@@QAEHABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z PROC ; CStringArray::Add, COMDAT
; _this$ = ecx

; 320  : 	{ INT_PTR nIndex = m_nSize;

	push	ebp
	mov	ebp, esp
	push	esi

; 321  : 		SetAtGrow(nIndex, newElement);

	push	DWORD PTR _newElement$[ebp]
	mov	esi, DWORD PTR [ecx+8]
	push	esi
	call	?SetAtGrow@CStringArray@@QAEXHABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z ; CStringArray::SetAtGrow

; 322  : 		return nIndex; }

	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
?Add@CStringArray@@QAEHABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z ENDP ; CStringArray::Add
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
;	COMDAT ??4?$CSimpleStringT@_W$0A@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
tv339 = -4						; size = 4
tv334 = 8						; size = 4
_strSrc$ = 8						; size = 4
??4?$CSimpleStringT@_W$0A@@ATL@@QAEAAV01@ABV01@@Z PROC	; ATL::CSimpleStringT<wchar_t,0>::operator=, COMDAT
; _this$ = ecx

; 271  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	eax, DWORD PTR _strSrc$[ebp]

; 271  : 	{

	push	ebx
	mov	ebx, ecx
	push	esi

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	eax, DWORD PTR [eax]

; 271  : 	{

	push	edi

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	edi, DWORD PTR [ebx]
	sub	edi, 16					; 00000010H
	mov	DWORD PTR tv339[ebp], eax
	lea	esi, DWORD PTR [eax-16]

; 272  : 		CStringData* pSrcData = strSrc.GetData();
; 273  : 		CStringData* pOldData = GetData();
; 274  : 		if( pSrcData != pOldData)

	cmp	esi, edi
	je	$LN4@operator

; 69   : 		return nRefs < 0;

	cmp	DWORD PTR [edi+12], 0

; 275  : 		{
; 276  : 			if( pOldData->IsLocked() || pSrcData->pStringMgr != pOldData->pStringMgr )

	jl	SHORT $LN5@operator
	mov	ecx, DWORD PTR [esi]
	cmp	ecx, DWORD PTR [edi]
	jne	SHORT $LN5@operator

; 882  : 		IAtlStringMgr* pNewStringMgr = pData->pStringMgr->Clone();

	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+16]

; 69   : 		return nRefs < 0;

	cmp	DWORD PTR [esi+12], 0

; 882  : 		IAtlStringMgr* pNewStringMgr = pData->pStringMgr->Clone();

	mov	ecx, eax

; 69   : 		return nRefs < 0;

	lea	eax, DWORD PTR [esi+12]

; 883  : 		if( !pData->IsLocked() && (pNewStringMgr == pData->pStringMgr) )

	jl	SHORT $LN20@operator
	cmp	ecx, DWORD PTR [esi]
	jne	SHORT $LN20@operator

; 65   : 		_InterlockedIncrement(&nRefs);

	lock	 inc	 DWORD PTR [eax]

; 887  : 		}

	jmp	SHORT $LN21@operator
$LN20@operator:

; 888  : 		else
; 889  : 		{
; 890  : 			pNewData = pNewStringMgr->Allocate( pData->nDataLength, sizeof( XCHAR ) );

	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR [esi+4]
	push	2
	push	DWORD PTR [edx]
	mov	DWORD PTR tv334[ebp], edx
	call	DWORD PTR [eax]
	mov	esi, eax

; 891  : 			if( pNewData == NULL )

	test	esi, esi
	je	SHORT $LN42@operator

; 894  : 			}
; 895  : 			pNewData->nDataLength = pData->nDataLength;

	mov	ecx, DWORD PTR tv334[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [esi+4], eax

; 896  : 			CopyChars( PXSTR( pNewData->data() ), pData->nDataLength+1,

	mov	eax, DWORD PTR [ecx]
	inc	eax
	push	eax
	push	DWORD PTR tv339[ebp]
	push	eax

; 59   : 		return (this+1);

	lea	eax, DWORD PTR [esi+16]

; 896  : 			CopyChars( PXSTR( pNewData->data() ), pData->nDataLength+1,

	push	eax
	call	?CopyChars@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::CopyChars
	add	esp, 16					; 00000010H
$LN21@operator:

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	or	eax, -1
	lea	ecx, DWORD PTR [edi+12]
	lock	 xadd	 DWORD PTR [ecx], eax
	dec	eax
	test	eax, eax
	jg	SHORT $LN34@operator

; 89   : 		{
; 90   : 			pStringMgr->Free( this );

	mov	ecx, DWORD PTR [edi]
	push	edi
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+4]
$LN34@operator:

; 59   : 		return (this+1);

	lea	eax, DWORD PTR [esi+16]

; 279  : 			}
; 280  : 			else
; 281  : 			{
; 282  : 				CStringData* pNewData = CloneData( pSrcData );
; 283  : 				pOldData->Release();
; 284  : 				Attach( pNewData );
; 285  : 			}
; 286  : 		}
; 287  : 
; 288  : 		return( *this );

	pop	edi

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	DWORD PTR [ebx], eax

; 279  : 			}
; 280  : 			else
; 281  : 			{
; 282  : 				CStringData* pNewData = CloneData( pSrcData );
; 283  : 				pOldData->Release();
; 284  : 				Attach( pNewData );
; 285  : 			}
; 286  : 		}
; 287  : 
; 288  : 		return( *this );

	mov	eax, ebx
	pop	esi
	pop	ebx

; 289  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
$LN5@operator:

; 277  : 			{
; 278  : 				SetString( strSrc.GetString(), strSrc.GetLength() );

	push	DWORD PTR [eax-12]
	mov	ecx, ebx
	push	eax
	call	?SetString@?$CSimpleStringT@_W$0A@@ATL@@QAEXPB_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::SetString
$LN4@operator:

; 279  : 			}
; 280  : 			else
; 281  : 			{
; 282  : 				CStringData* pNewData = CloneData( pSrcData );
; 283  : 				pOldData->Release();
; 284  : 				Attach( pNewData );
; 285  : 			}
; 286  : 		}
; 287  : 
; 288  : 		return( *this );

	pop	edi
	pop	esi
	mov	eax, ebx
	pop	ebx

; 289  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
$LN42@operator:

; 893  : 				ThrowMemoryException();

	call	?ThrowMemoryException@?$CSimpleStringT@_W$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<wchar_t,0>::ThrowMemoryException
$LN40@operator:
	int	3
??4?$CSimpleStringT@_W$0A@@ATL@@QAEAAV01@ABV01@@Z ENDP	; ATL::CSimpleStringT<wchar_t,0>::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
;	COMDAT ??4?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
tv339 = -4						; size = 4
tv334 = 8						; size = 4
_strSrc$ = 8						; size = 4
??4?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z PROC ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::operator=, COMDAT
; _this$ = ecx

; 1299 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	eax, DWORD PTR _strSrc$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1299 : 	{

	push	ebx
	mov	ebx, ecx
	push	esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	eax, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1299 : 	{

	push	edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	edi, DWORD PTR [ebx]
	sub	edi, 16					; 00000010H
	mov	DWORD PTR tv339[ebp], eax
	lea	esi, DWORD PTR [eax-16]

; 274  : 		if( pSrcData != pOldData)

	cmp	esi, edi
	je	$LN6@operator

; 69   : 		return nRefs < 0;

	cmp	DWORD PTR [edi+12], 0

; 276  : 			if( pOldData->IsLocked() || pSrcData->pStringMgr != pOldData->pStringMgr )

	jl	SHORT $LN7@operator
	mov	ecx, DWORD PTR [esi]
	cmp	ecx, DWORD PTR [edi]
	jne	SHORT $LN7@operator

; 882  : 		IAtlStringMgr* pNewStringMgr = pData->pStringMgr->Clone();

	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+16]

; 69   : 		return nRefs < 0;

	cmp	DWORD PTR [esi+12], 0

; 882  : 		IAtlStringMgr* pNewStringMgr = pData->pStringMgr->Clone();

	mov	ecx, eax

; 69   : 		return nRefs < 0;

	lea	eax, DWORD PTR [esi+12]

; 883  : 		if( !pData->IsLocked() && (pNewStringMgr == pData->pStringMgr) )

	jl	SHORT $LN22@operator
	cmp	ecx, DWORD PTR [esi]
	jne	SHORT $LN22@operator

; 65   : 		_InterlockedIncrement(&nRefs);

	lock	 inc	 DWORD PTR [eax]

; 887  : 		}

	jmp	SHORT $LN23@operator
$LN22@operator:

; 888  : 		else
; 889  : 		{
; 890  : 			pNewData = pNewStringMgr->Allocate( pData->nDataLength, sizeof( XCHAR ) );

	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR [esi+4]
	push	2
	push	DWORD PTR [edx]
	mov	DWORD PTR tv334[ebp], edx
	call	DWORD PTR [eax]
	mov	esi, eax

; 891  : 			if( pNewData == NULL )

	test	esi, esi
	je	SHORT $LN45@operator

; 894  : 			}
; 895  : 			pNewData->nDataLength = pData->nDataLength;

	mov	ecx, DWORD PTR tv334[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [esi+4], eax

; 896  : 			CopyChars( PXSTR( pNewData->data() ), pData->nDataLength+1,

	mov	eax, DWORD PTR [ecx]
	inc	eax
	push	eax
	push	DWORD PTR tv339[ebp]
	push	eax

; 59   : 		return (this+1);

	lea	eax, DWORD PTR [esi+16]

; 896  : 			CopyChars( PXSTR( pNewData->data() ), pData->nDataLength+1,

	push	eax
	call	?CopyChars@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::CopyChars
	add	esp, 16					; 00000010H
$LN23@operator:

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	or	eax, -1
	lea	ecx, DWORD PTR [edi+12]
	lock	 xadd	 DWORD PTR [ecx], eax
	dec	eax
	test	eax, eax
	jg	SHORT $LN36@operator

; 89   : 		{
; 90   : 			pStringMgr->Free( this );

	mov	ecx, DWORD PTR [edi]
	push	edi
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+4]
$LN36@operator:

; 59   : 		return (this+1);

	lea	eax, DWORD PTR [esi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1302 : 		return( *this );

	pop	edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	DWORD PTR [ebx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1302 : 		return( *this );

	mov	eax, ebx
	pop	esi
	pop	ebx

; 1303 : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
$LN7@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 278  : 				SetString( strSrc.GetString(), strSrc.GetLength() );

	push	DWORD PTR [eax-12]
	mov	ecx, ebx
	push	eax
	call	?SetString@?$CSimpleStringT@_W$0A@@ATL@@QAEXPB_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::SetString
$LN6@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1302 : 		return( *this );

	pop	edi
	pop	esi
	mov	eax, ebx
	pop	ebx

; 1303 : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
$LN45@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 893  : 				ThrowMemoryException();

	call	?ThrowMemoryException@?$CSimpleStringT@_W$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<wchar_t,0>::ThrowMemoryException
$LN43@operator:
	int	3
??4?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z ENDP ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@_W@ATL@@SAHPBD@Z
_TEXT	SEGMENT
_pszSrc$ = 8						; size = 4
?GetBaseTypeLength@?$ChTraitsCRT@_W@ATL@@SAHPBD@Z PROC	; ATL::ChTraitsCRT<wchar_t>::GetBaseTypeLength, COMDAT

; 742  : 	{

	push	ebp
	mov	ebp, esp

; 743  : 		// Returns required buffer size in wchar_ts
; 744  : 		return ::MultiByteToWideChar( _AtlGetConversionACP(), 0, pszSrc, -1, NULL, 0 )-1;

	push	0
	push	0
	push	-1
	push	DWORD PTR _pszSrc$[ebp]
	push	0
	push	3
	call	DWORD PTR __imp__MultiByteToWideChar@24
	dec	eax

; 745  : 	}

	pop	ebp
	ret	0
?GetBaseTypeLength@?$ChTraitsCRT@_W@ATL@@SAHPBD@Z ENDP	; ATL::ChTraitsCRT<wchar_t>::GetBaseTypeLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlconv.h
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetConversionACP@ATL@@YGIXZ PROC			; ATL::_AtlGetConversionACP, COMDAT

; 99   : #ifdef _CONVERSION_DONT_USE_THREAD_LOCALE
; 100  : 	return CP_ACP;
; 101  : #else
; 102  : 	return CP_THREAD_ACP;

	mov	eax, 3

; 103  : #endif
; 104  : }

	ret	0
?_AtlGetConversionACP@ATL@@YGIXZ ENDP			; ATL::_AtlGetConversionACP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@_W@ATL@@SAXPA_WHPBDH@Z
_TEXT	SEGMENT
_pszDest$ = 8						; size = 4
_nDestLength$ = 12					; size = 4
_pszSrc$ = 16						; size = 4
_nSrcLength$ = 20					; size = 4
?ConvertToBaseType@?$ChTraitsCRT@_W@ATL@@SAXPA_WHPBDH@Z PROC ; ATL::ChTraitsCRT<wchar_t>::ConvertToBaseType, COMDAT

; 775  : 	{

	push	ebp
	mov	ebp, esp

; 776  : 		// nLen is in wchar_ts
; 777  : 		::MultiByteToWideChar( _AtlGetConversionACP(), 0, pszSrc, nSrcLength, pszDest, nDestLength );

	push	DWORD PTR _nDestLength$[ebp]
	push	DWORD PTR _pszDest$[ebp]
	push	DWORD PTR _nSrcLength$[ebp]
	push	DWORD PTR _pszSrc$[ebp]
	push	0
	push	3
	call	DWORD PTR __imp__MultiByteToWideChar@24

; 778  : 	}

	pop	ebp
	ret	0
?ConvertToBaseType@?$ChTraitsCRT@_W@ATL@@SAXPA_WHPBDH@Z ENDP ; ATL::ChTraitsCRT<wchar_t>::ConvertToBaseType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
;	COMDAT ??4?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
_pszSrc$ = 8						; size = 4
??4?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEAAV01@PBD@Z PROC ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::operator=, COMDAT
; _this$ = ecx

; 1322 : 	{

	push	ebp
	mov	ebp, esp
	push	ebx

; 1323 : 		// nDestLength is in XCHARs
; 1324 : 		int nDestLength = (pszSrc != NULL) ? StringTraits::GetBaseTypeLength( pszSrc ) : 0;

	mov	ebx, DWORD PTR _pszSrc$[ebp]
	push	esi
	mov	esi, ecx
	push	edi
	test	ebx, ebx
	je	SHORT $LN2@operator

; 744  : 		return ::MultiByteToWideChar( _AtlGetConversionACP(), 0, pszSrc, -1, NULL, 0 )-1;

	push	0
	push	0
	push	-1
	push	ebx
	push	0
	push	3
	call	DWORD PTR __imp__MultiByteToWideChar@24
	lea	edi, DWORD PTR [eax-1]

; 1325 : 		if( nDestLength > 0 )

	test	edi, edi
	jle	SHORT $LN2@operator
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	edx, DWORD PTR [esi]

; 808  : 		int nShared = 1-pOldData->nRefs;  // nShared < 0 means true, >= 0 means false

	mov	ecx, 1

; 809  : 		int nTooShort = pOldData->nAllocLength-nLength;  // nTooShort < 0 means true, >= 0 means false

	mov	eax, DWORD PTR [edx-8]
	sub	ecx, DWORD PTR [edx-4]
	sub	eax, edi

; 810  : 		if( (nShared|nTooShort) < 0 )  // If either sign bit is set (i.e. either is less than zero), we need to copy data

	or	ecx, eax
	jge	SHORT $LN13@operator

; 811  : 		{
; 812  : 			PrepareWrite2( nLength );

	push	edi
	mov	ecx, esi
	call	?PrepareWrite2@?$CSimpleStringT@_W$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<wchar_t,0>::PrepareWrite2
	mov	edx, DWORD PTR [esi]
$LN13@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 777  : 		::MultiByteToWideChar( _AtlGetConversionACP(), 0, pszSrc, nSrcLength, pszDest, nDestLength );

	push	edi
	push	edx
	push	-1
	push	ebx
	push	0
	push	3
	call	DWORD PTR __imp__MultiByteToWideChar@24
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 871  : 		if( nLength < 0 || nLength > GetData()->nAllocLength)

	mov	eax, DWORD PTR [esi]
	cmp	edi, DWORD PTR [eax-8]
	jg	SHORT $LN57@operator

; 873  : 
; 874  : 		GetData()->nDataLength = nLength;

	mov	DWORD PTR [eax-12], edi

; 875  : 		m_pszData[nLength] = 0;

	xor	ecx, ecx
	mov	eax, DWORD PTR [esi]
	mov	WORD PTR [eax+edi*2], cx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1336 : 		return( *this );

	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx

; 1337 : 	}

	pop	ebp
	ret	4
$LN2@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	mov	eax, DWORD PTR [esi]

; 439  : 		if( pOldData->nDataLength == 0 )

	cmp	DWORD PTR [eax-12], 0

; 800  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

	lea	edx, DWORD PTR [eax-16]

; 438  : 		IAtlStringMgr* pStringMgr = pOldData->pStringMgr;

	mov	edi, DWORD PTR [edx]

; 439  : 		if( pOldData->nDataLength == 0 )

	je	SHORT $LN35@operator

; 69   : 		return nRefs < 0;

	cmp	DWORD PTR [edx+12], 0
	lea	ecx, DWORD PTR [edx+12]

; 444  : 		if( pOldData->IsLocked() )

	jge	SHORT $LN34@operator

; 871  : 		if( nLength < 0 || nLength > GetData()->nAllocLength)

	cmp	DWORD PTR [eax-8], 0
	jl	SHORT $LN57@operator

; 873  : 
; 874  : 		GetData()->nDataLength = nLength;

	mov	DWORD PTR [eax-12], 0

; 875  : 		m_pszData[nLength] = 0;

	xor	ecx, ecx
	mov	eax, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1336 : 		return( *this );

	pop	edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 875  : 		m_pszData[nLength] = 0;

	mov	WORD PTR [eax], cx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1336 : 		return( *this );

	mov	eax, esi
	pop	esi
	pop	ebx

; 1337 : 	}

	pop	ebp
	ret	4
$LN34@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 88   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

	or	eax, -1
	lock	 xadd	 DWORD PTR [ecx], eax
	dec	eax
	test	eax, eax
	jg	SHORT $LN51@operator

; 89   : 		{
; 90   : 			pStringMgr->Free( this );

	mov	ecx, DWORD PTR [edx]
	push	edx
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+4]
$LN51@operator:

; 452  : 			CStringData* pNewData = pStringMgr->GetNilString();

	mov	eax, DWORD PTR [edi]
	mov	ecx, edi
	call	DWORD PTR [eax+12]

; 59   : 		return (this+1);

	add	eax, 16					; 00000010H

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	DWORD PTR [esi], eax
$LN35@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1336 : 		return( *this );

	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx

; 1337 : 	}

	pop	ebp
	ret	4
$LN57@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 872  : 			AtlThrow(E_INVALIDARG);

	push	-2147024809				; 80070057H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN58@operator:
	int	3
??4?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEAAV01@PBD@Z ENDP ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
;	COMDAT ??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pszSrc$ = 8						; size = 4
??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PBD@Z PROC ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >, COMDAT
; _this$ = ecx

; 1066 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxstr.h

; 52   : 		return( AfxGetStringManager() );

	call	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager
	mov	ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 205  : 		ATLENSURE( pStringMgr != NULL );

	test	ecx, ecx
	je	SHORT $LN29@CStringT

; 206  : 		CStringData* pData = pStringMgr->GetNilString();

	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+12]

; 59   : 		return (this+1);

	add	eax, 16					; 00000010H

; 780  : 		m_pszData = static_cast< PXSTR >( pData->data() );

	mov	DWORD PTR [esi], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 2668 : 		if( (pv != NULL) && IS_INTRESOURCE( pv ) )

	mov	eax, DWORD PTR _pszSrc$[ebp]

; 1065 : 		CThisSimpleString( StringTraits::GetDefaultManager() )

	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2668 : 		if( (pv != NULL) && IS_INTRESOURCE( pv ) )

	test	eax, eax
	je	SHORT $LN25@CStringT
	test	eax, -65536				; ffff0000H
	jne	SHORT $LN25@CStringT

; 2669 : 		{
; 2670 : 			UINT nID = LOWORD( reinterpret_cast< DWORD_PTR >( pv ) );

	movzx	eax, ax

; 2671 : 			(nID);
; 2672 : #ifdef _ATL_USE_WINAPI_FAMILY_DESKTOP_APP
; 2673 : 			if( !LoadString( nID ) )

	mov	ecx, esi
	push	eax
	call	?LoadStringW@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEHI@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::LoadStringW

; 1071 : 	}

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
$LN25@CStringT:

; 1067 : 		if( !CheckImplicitLoad( pszSrc ) )
; 1068 : 		{
; 1069 : 			*this = pszSrc;

	push	eax
	mov	ecx, esi
	call	??4?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::operator=

; 1071 : 	}

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
$LN29@CStringT:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpstr.h

; 205  : 		ATLENSURE( pStringMgr != NULL );

	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN27@CStringT:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CSimpleStringT@_W$0A@@ATL@@QAE@XZ	; ATL::CSimpleStringT<wchar_t,0>::~CSimpleStringT<wchar_t,0>
__ehhandler$??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PBD@Z ENDP ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxcoll.inl
;	COMDAT ?ElementAt@CStringArray@@QAEAAV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@H@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
?ElementAt@CStringArray@@QAEAAV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@H@Z PROC ; CStringArray::ElementAt, COMDAT
; _this$ = ecx

; 305  : 	{ ASSERT(nIndex >= 0 && nIndex < m_nSize);

	push	ebp
	mov	ebp, esp

; 306  : 		if( nIndex < 0 || nIndex >= m_nSize )

	mov	edx, DWORD PTR _nIndex$[ebp]
	test	edx, edx
	js	SHORT $LN3@ElementAt
	cmp	edx, DWORD PTR [ecx+8]
	jge	SHORT $LN3@ElementAt

; 308  : 		return m_pData[nIndex]; }

	mov	eax, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [eax+edx*4]
	pop	ebp
	ret	4
$LN3@ElementAt:

; 307  : 			AfxThrowInvalidArgException();

	call	?AfxThrowInvalidArgException@@YGXXZ	; AfxThrowInvalidArgException
$LN5@ElementAt:
	int	3
?ElementAt@CStringArray@@QAEAAV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@H@Z ENDP ; CStringArray::ElementAt
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxcoll.inl
;	COMDAT ??ACStringArray@@QAEAAV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@H@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
??ACStringArray@@QAEAAV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@H@Z PROC ; CStringArray::operator[], COMDAT
; _this$ = ecx

; 327  : 	{ return ElementAt(nIndex); }

	push	ebp
	mov	ebp, esp

; 306  : 		if( nIndex < 0 || nIndex >= m_nSize )

	mov	edx, DWORD PTR _nIndex$[ebp]
	test	edx, edx
	js	SHORT $LN5@operator
	cmp	edx, DWORD PTR [ecx+8]
	jge	SHORT $LN5@operator

; 308  : 		return m_pData[nIndex]; }

	mov	eax, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [eax+edx*4]

; 327  : 	{ return ElementAt(nIndex); }

	pop	ebp
	ret	4
$LN5@operator:

; 307  : 			AfxThrowInvalidArgException();

	call	?AfxThrowInvalidArgException@@YGXXZ	; AfxThrowInvalidArgException
$LN8@operator:
	int	3
??ACStringArray@@QAEAAV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@H@Z ENDP ; CStringArray::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxcoll.inl
;	COMDAT ?GetSize@CStringArray@@QBEHXZ
_TEXT	SEGMENT
?GetSize@CStringArray@@QBEHXZ PROC			; CStringArray::GetSize, COMDAT
; _this$ = ecx

; 278  : 	{ return m_nSize; }

	mov	eax, DWORD PTR [ecx+8]
	ret	0
?GetSize@CStringArray@@QBEHXZ ENDP			; CStringArray::GetSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlcore.h
;	COMDAT ?AtlIsValidString@ATL@@YAHPB_WI@Z
_TEXT	SEGMENT
_psz$ = 8						; size = 4
_nMaxLength$ = 12					; size = 4
?AtlIsValidString@ATL@@YAHPB_WI@Z PROC			; ATL::AtlIsValidString, COMDAT

; 79   : {

	push	ebp
	mov	ebp, esp

; 80   : 	(nMaxLength);
; 81   : 	return (psz != NULL);

	xor	eax, eax
	cmp	DWORD PTR _psz$[ebp], eax
	setne	al

; 82   : }

	pop	ebp
	ret	0
?AtlIsValidString@ATL@@YAHPB_WI@Z ENDP			; ATL::AtlIsValidString
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
;	COMDAT ?StringCompare@?$ChTraitsCRT@_W@ATL@@SAHPB_W0@Z
_TEXT	SEGMENT
_pszA$ = 8						; size = 4
_pszB$ = 12						; size = 4
?StringCompare@?$ChTraitsCRT@_W@ATL@@SAHPB_W0@Z PROC	; ATL::ChTraitsCRT<wchar_t>::StringCompare, COMDAT

; 563  : 	{

	push	ebp
	mov	ebp, esp

; 564  : 		return wcscmp( pszA, pszB );

	mov	ecx, DWORD PTR _pszB$[ebp]
	mov	eax, DWORD PTR _pszA$[ebp]
	npad	7
$LL3@StringComp:
	mov	dx, WORD PTR [eax]
	cmp	dx, WORD PTR [ecx]
	jne	SHORT $LN4@StringComp
	test	dx, dx
	je	SHORT $LN5@StringComp
	mov	dx, WORD PTR [eax+2]
	cmp	dx, WORD PTR [ecx+2]
	jne	SHORT $LN4@StringComp
	add	eax, 4
	add	ecx, 4
	test	dx, dx
	jne	SHORT $LL3@StringComp
$LN5@StringComp:
	xor	eax, eax

; 565  : 	}

	pop	ebp
	ret	0
$LN4@StringComp:

; 564  : 		return wcscmp( pszA, pszB );

	sbb	eax, eax
	or	eax, 1

; 565  : 	}

	pop	ebp
	ret	0
?StringCompare@?$ChTraitsCRT@_W@ATL@@SAHPB_W0@Z ENDP	; ATL::ChTraitsCRT<wchar_t>::StringCompare
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlcore.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h
;	COMDAT ?Compare@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBEHPB_W@Z
_TEXT	SEGMENT
_psz$ = 8						; size = 4
?Compare@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBEHPB_W@Z PROC ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::Compare, COMDAT
; _this$ = ecx

; 1443 : 	{

	push	ebp
	mov	ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlcore.h

; 81   : 	return (psz != NULL);

	mov	eax, DWORD PTR _psz$[ebp]
	test	eax, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\cstringt.h

; 1444 : 		ATLENSURE( AtlIsValidString( psz ) );

	je	SHORT $LN22@Compare

; 564  : 		return wcscmp( pszA, pszB );

	mov	ecx, DWORD PTR [ecx]
	npad	4
$LL16@Compare:
	mov	dx, WORD PTR [ecx]
	cmp	dx, WORD PTR [eax]
	jne	SHORT $LN17@Compare
	test	dx, dx
	je	SHORT $LN18@Compare
	mov	dx, WORD PTR [ecx+2]
	cmp	dx, WORD PTR [eax+2]
	jne	SHORT $LN17@Compare
	add	ecx, 4
	add	eax, 4
	test	dx, dx
	jne	SHORT $LL16@Compare
$LN18@Compare:
	xor	eax, eax

; 1445 : 		_Analysis_assume_(psz); // AtlIsValidString guarantees that psz != NULL
; 1446 : 		return( StringTraits::StringCompare( this->GetString(), psz ) );
; 1447 : 	}

	pop	ebp
	ret	4
$LN17@Compare:

; 564  : 		return wcscmp( pszA, pszB );

	sbb	eax, eax
	or	eax, 1

; 1445 : 		_Analysis_assume_(psz); // AtlIsValidString guarantees that psz != NULL
; 1446 : 		return( StringTraits::StringCompare( this->GetString(), psz ) );
; 1447 : 	}

	pop	ebp
	ret	4
$LN22@Compare:

; 1444 : 		ATLENSURE( AtlIsValidString( psz ) );

	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN20@Compare:
	int	3
?Compare@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QBEHPB_W@Z ENDP ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::Compare
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\atlmfc\include\afxcoll.inl
;	COMDAT ?RemoveAll@CStringArray@@QAEXXZ
_TEXT	SEGMENT
?RemoveAll@CStringArray@@QAEXXZ PROC			; CStringArray::RemoveAll, COMDAT
; _this$ = ecx

; 286  : 	{ SetSize(0); }

	push	-1
	push	0
	call	?SetSize@CStringArray@@QAEXHH@Z		; CStringArray::SetSize
	ret	0
?RemoveAll@CStringArray@@QAEXXZ ENDP			; CStringArray::RemoveAll
_TEXT	ENDS
END
